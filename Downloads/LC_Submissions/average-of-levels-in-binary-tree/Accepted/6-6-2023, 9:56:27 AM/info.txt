{"id":964861743,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1686025587,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/964861743/","is_pending":"Not Pending","title":"Average of Levels in Binary Tree","memory":"22.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<double> averageOfLevels(TreeNode* root) {\n          vector<double>ans;\n        queue<TreeNode*> q;\n        if(root==NULL){return ans;}\n        q.push(root);\n        while(q.size()){\n            vector<double> v;\n         double av=0.00,sum=0.00;\n            int n= q.size();\n            for(int i=0;i<n;i++){\n                 TreeNode* a= q.front();\n                q.pop();\n                if(a!=NULL){ \n                if(a->left) q.push(a->left);\n                   if(a->right) q.push(a->right);\n                v.push_back(a->val);\n                sum+=a->val;} \n            }\n           av=(double)sum/v.size();\n              ans.push_back(av);   \n        }\n        \n     return ans;   \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"average-of-levels-in-binary-tree","has_notes":false,"flag_type":1}