{"id":974486175,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1687151046,"status":10,"status_display":"Accepted","runtime":"447 ms","url":"/submissions/detail/974486175/","is_pending":"Not Pending","title":"Partition Equal Subset Sum","memory":"13.2 MB","code":"class Solution {\npublic:\n    \n    bool fxn(vector<int> nums,int s,int n,vector<vector<bool>>&dp){\n        for(int i=1;i<=n;i++){\n            for(int j=1;j<=s;j++){\n                if(nums[i-1]<=j){\n                    dp[i][j]= dp[i-1][j-nums[i-1]]||dp[i-1][j];\n                }\n                else dp[i][j]= dp[i-1][j];\n                \n            }\n        }\n        return dp[n][s];\n    }\n    bool canPartition(vector<int>& nums) {\n     int s=0,n= nums.size();\n        \n        for(int i=0;i<nums.size();i++){\n            s+=nums[i];\n        }\n        if(s%2!=0)return false;\n        // bool dp[n][s/2];\n        vector<vector<bool>>dp(n+1,vector<bool>(s/2+1));\n        for(int i=0;i<=n;i++){\n            for(int j=0;j<=s/2;j++){\n                if(i==0){dp[i][j]=false;}\n                if(j==0){dp[i][j]=true;}\n            }\n        }\n        return fxn(nums,s/2,n,dp);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-equal-subset-sum","has_notes":false,"flag_type":1}