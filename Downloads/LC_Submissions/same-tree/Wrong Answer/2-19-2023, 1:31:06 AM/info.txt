{"id":900556954,"lang":"cpp","lang_name":"C++","time":"9Â months","timestamp":1676750466,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/900556954/","is_pending":"Not Pending","title":"Same Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    void preordertraversal(TreeNode* head , vector<int> v){\n          \n            if(head ==NULL){\n                return ;\n            }\n        v.push_back(head->val);\n        preordertraversal(head->left ,v);\n        preordertraversal(head->right,v);\n       \n    }\n    \n    void traversal(TreeNode* root , vector<int> &v){\n        if(root==NULL){\n            return ;\n        }\n          v.push_back(root->val);\n           traversal(root->left,v);\n           traversal(root->right,v);\n    }\n    \npublic:\n    bool isSameTree(TreeNode* p, TreeNode* q) {\n        vector<int> v1;\n        vector<int> v2;\n        traversal(p,v1);\n      traversal(q,v2);\n        if(v1==v2){\n            return true;\n        }else return false;\n    }\n};","compare_result":"101111110010111111111011111111111111111111111111111111111111","title_slug":"same-tree","has_notes":false,"flag_type":1}