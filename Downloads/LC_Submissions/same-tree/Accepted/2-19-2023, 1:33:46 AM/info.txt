{"id":900557981,"lang":"cpp","lang_name":"C++","time":"9Â months","timestamp":1676750626,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/900557981/","is_pending":"Not Pending","title":"Same Tree","memory":"9.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    void preordertraversal(TreeNode* head , vector<int>& v){\n          \n            if(head ==NULL){\n                return ;\n            }\n        v.push_back(head->val);\n        preordertraversal(head->left ,v);\n        preordertraversal(head->right,v);\n       \n    }\n    \n    void traversal(TreeNode* root , vector<int> &v){\n        if(root==NULL){\n            return ;\n        }\n          v.push_back(root->val);\n           traversal(root->left,v);\n           traversal(root->right,v);\n    }\n    \npublic:\n   bool isSameTree(TreeNode *p, TreeNode *q) {\n    if (p == NULL || q == NULL) return (p == q);\n    return (p->val == q->val && isSameTree(p->left, q->left) && isSameTree(p->right, q->right));\n}\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"same-tree","has_notes":false,"flag_type":1}