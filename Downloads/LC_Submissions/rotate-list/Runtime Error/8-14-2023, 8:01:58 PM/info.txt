{"id":1021177125,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1692023518,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1021177125/","is_pending":"Not Pending","title":"Rotate List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* rotateRight(ListNode* head, int k) {\n        ListNode* temp = head;\n        int n=0;\n        while(temp){\n            n++;\n            temp=temp->next;\n        }\n        if(n==0||n==1)return head;\n       k= k%n; \n        int x= n-k-1;\n        temp = head;\n        while(x--){\n            temp=temp->next;\n        }\n        ListNode* nxt= temp->next;\n        temp->next=NULL;\n        temp=nxt;\n        while(temp->next!=NULL){\n            temp=temp->next;\n        }\n        temp->next= head;\n        return nxt;\n    }\n};","compare_result":"111111100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"rotate-list","has_notes":false,"flag_type":1}