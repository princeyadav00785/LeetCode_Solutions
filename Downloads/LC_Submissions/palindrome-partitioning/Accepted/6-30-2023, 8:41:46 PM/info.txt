{"id":983138725,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1688137906,"status":10,"status_display":"Accepted","runtime":"154 ms","url":"/submissions/detail/983138725/","is_pending":"Not Pending","title":"Palindrome Partitioning","memory":"57.5 MB","code":"class Solution {\npublic:\n    bool issafe(int index,int i,string s){\n        while(index<=i){\n            if(s[index++]!=s[i--]){\n                return false;\n            }\n        }\n        return true;\n    }\n    void part(vector<string>&path,vector<vector<string>>&ans,string s,int index){\n        if(index==s.size()){\n            ans.push_back(path);\n            return;\n        }\n        for(int i=index;i<s.size();i++)\n        {\n        if(issafe(index,i,s)){\n        path.push_back(s.substr(index,i-index+1));\n        part(path,ans,s,i+1);\n        path.pop_back();\n        }\n        }\n    }\n    vector<vector<string>> partition(string s) {\n        vector<vector<string>>ans;\n        vector<string>path;\n        part(path,ans,s,0);\n        return ans;\n    }\n    \n};","compare_result":"11111111111111111111111111111111","title_slug":"palindrome-partitioning","has_notes":false,"flag_type":1}