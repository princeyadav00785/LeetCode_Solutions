{"id":930624974,"lang":"cpp","lang_name":"C++","time":"7 months, 1 week","timestamp":1681029139,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/930624974/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"8.2 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        ListNode* a=head;\n        ListNode* b= head;\n     if(head == NULL)\n\t\treturn false;\n        while(b!=NULL&&b->next!=NULL){\n             a=a->next;\n            b=b->next->next;\n          \n            if(a==b){\n                return true;\n            }\n          \n        }\n        return false;\n\t\n    }\n};","compare_result":"11111111111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}