{"id":985836068,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1688446461,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/985836068/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        ListNode* slow = head;\n         ListNode* fast = head;\n         if(head==NULL||head->next==NULL){\n             return false;\n         }\n          while(fast!=NULL&&fast->next!=NULL){\n\n              slow =slow->next;\n              fast=fast->next->next;\n                            if(slow==fast){\n                  return true;\n              }\n          }\n           return false;\n        \n\n    }\n};","compare_result":"11111111111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}