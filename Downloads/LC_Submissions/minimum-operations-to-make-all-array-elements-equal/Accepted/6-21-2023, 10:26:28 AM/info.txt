{"id":976068822,"lang":"cpp","lang_name":"C++","time":"4 months, 4 weeks","timestamp":1687323388,"status":10,"status_display":"Accepted","runtime":"352 ms","url":"/submissions/detail/976068822/","is_pending":"Not Pending","title":"Minimum Operations to Make All Array Elements Equal","memory":"81.2 MB","code":"class Solution {\npublic:\n    vector<long long> minOperations(vector<int>& nums, vector<int>& queries) {\n   int n = nums.size();\n        sort(nums.begin(), nums.end());\n        vector<long long > prefSum(n+1, 0);\n        \n        for(int i=0;i<n;i++){\n            prefSum[i+1] = prefSum[i] + nums[i];\n        }\n        \n        nums.insert(nums.begin(), 0);\n        n++;\n        \n        vector<long long> ans;\n        for(auto q : queries){\n            long long lidx = lower_bound(nums.begin(), nums.end(), q) - nums.begin() - 1;\n            long long uidx = upper_bound(nums.begin(), nums.end(), q) - nums.begin();\n            \n            long long val = q*lidx - (prefSum[lidx] - prefSum[0]);\n            \n            if(uidx!=n){\n                val +=  (prefSum[n-1] - prefSum[uidx-1]) - q*(n-uidx);\n            }\n            \n            ans.push_back(val);\n        }\n    \n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"minimum-operations-to-make-all-array-elements-equal","has_notes":false,"flag_type":1}