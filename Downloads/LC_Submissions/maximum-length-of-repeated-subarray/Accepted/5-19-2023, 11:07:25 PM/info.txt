{"id":953483283,"lang":"cpp","lang_name":"C++","time":"6Â months","timestamp":1684517845,"status":10,"status_display":"Accepted","runtime":"349 ms","url":"/submissions/detail/953483283/","is_pending":"Not Pending","title":"Maximum Length of Repeated Subarray","memory":"85.8 MB","code":"class Solution {\npublic:\n    \nint fxn(vector<int> nums1,vector<int>nums2,int n,int m){\n    vector<vector<int>>dp(n+1,vector<int>(m+1,0));\n    int ans=0;\n    for(int i=1;i<=n;i++){\n        for(int j=1;j<=m;j++){\n            if(nums1[i-1]==nums2[j-1]){\n                dp[i][j]= 1+dp[i-1][j-1];\n            }else {\n                dp[i][j]=0;\n            }\n             ans = max(ans, dp[i][j]);\n        }\n    }\n    \n    return ans;\n}\n//       int n1 = nums1.size(), n2 = nums2.size(), ans = 0;\n//         vector<vector<int>>dp(n1+1, vector<int>(n2+1, 0));\n  \n//         for(int i = 1; i <= n1; i++)\n//             for(int j = 1; j <= n2; j++){\n//                 if(nums1[i-1] == nums2[j-1]) dp[i][j] = 1 + dp[i-1][j-1];\n//                 else dp[i][j] = 0;\n//                 ans = max(ans, dp[i][j]);\n//             }\n//         return ans;\n    \n    int findLength(vector<int>& nums1, vector<int>& nums2) {\n   int ans = fxn(nums1,nums2,nums1.size(),nums2.size());\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"maximum-length-of-repeated-subarray","has_notes":false,"flag_type":1}