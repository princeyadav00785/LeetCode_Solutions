{"id":945932798,"lang":"cpp","lang_name":"C++","time":"6 months, 1 week","timestamp":1683444298,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/945932798/","is_pending":"Not Pending","title":"Merge Intervals","memory":"N/A","code":"class Solution {\npublic:\n    vector<vector<int>> merge(vector<vector<int>>& intervals) {\n       sort(intervals.begin(),intervals.end());\n        vector<vector<int>> ans;\n        int cnt=0;\n        int l=intervals[0][0],h=intervals[0][1];\n        for(auto x:intervals){\n            if(x[0]<=h){h=x[1];}else if(x[0]>h) {\n                ans.push_back({l,h});\n                l=x[0];\n                h=x[1];\n            }\n                                                                      cnt++;\n        }\n        if(h==intervals[intervals.size()-1][1])\n        ans.push_back({l,h});\n        // cout<<cnt;\n        return ans;\n    }\n};","compare_result":"11111111110011101110111110111111111111110111111111111111101111111011111111110111101101110111111010101110101111111111110110011101100001001100010110000000000000000000000111","title_slug":"merge-intervals","has_notes":false,"flag_type":1}