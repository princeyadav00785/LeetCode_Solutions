{"id":945938964,"lang":"cpp","lang_name":"C++","time":"6 months, 1 week","timestamp":1683445184,"status":10,"status_display":"Accepted","runtime":"55 ms","url":"/submissions/detail/945938964/","is_pending":"Not Pending","title":"Merge Intervals","memory":"20.1 MB","code":"class Solution {\npublic:\n    vector<vector<int>> merge(vector<vector<int>>& intervals) {\n          if(intervals.size()<=1) return intervals;\n       sort(intervals.begin(),intervals.end());\n        vector<vector<int>> ans;\n        int l=intervals[0][0],h=intervals[0][1];\n        for(auto x:intervals){\n            if(x[0]<=h){h=max(x[1],h);}else  {\n                ans.push_back({l,h});\n                l=x[0];\n                h=x[1];\n            }   \n        }if(ans.size()==0){\n            ans.push_back({l,h});\n        }\n        else if(ans[ans.size()-1][0]!=intervals[intervals.size()-1][0]&&\n          ans[ans.size()-1][1]!=intervals[intervals.size()-1][1])\n           ans.push_back({l,h}); \n        return ans;\n        \n        //  if(intervals.size()<=1) return intervals;\n        // sort(intervals.begin(), intervals.end());\n        // vector<vector<int>> output;\n        // output.push_back(intervals[0]);\n        // for(int i=1; i<intervals.size(); i++) {\n        //     if(output.back()[1] >= intervals[i][0]) output.back()[1] = max(output.back()[1] , intervals[i][1]);\n        //     else output.push_back(intervals[i]); \n        // }\n        // return output;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-intervals","has_notes":false,"flag_type":1}