{"id":965650603,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1686115766,"status":10,"status_display":"Accepted","runtime":"41 ms","url":"/submissions/detail/965650603/","is_pending":"Not Pending","title":"Merge Intervals","memory":"18.9 MB","code":"class Solution {\npublic:\n    vector<vector<int>> merge(vector<vector<int>>& v) {\n//           if(intervals.size()<=1) return intervals;\n//        sort(intervals.begin(),intervals.end());\n//         vector<vector<int>> ans;\n//         int l=intervals[0][0],h=intervals[0][1];\n//         for(auto x:intervals){\n//             if(x[0]<=h){h=max(x[1],h);}else  {\n//                 ans.push_back({l,h});\n//                 l=x[0];\n//                 h=x[1];\n//             }   \n//         }if(ans.size()==0){\n//             ans.push_back({l,h});\n//         }\n//         else if(ans[ans.size()-1][0]!=intervals[intervals.size()-1][0]&&\n//           ans[ans.size()-1][1]!=intervals[intervals.size()-1][1])\n//            ans.push_back({l,h}); \n//         return ans;\n        \n        vector<vector<int>>ans;\n        int n=v.size();\n        if(v.size()<=1){return v;}\n        sort(v.begin(),v.end());\n        int l=v[0][0];\n        int h= v[0][1];\n        for(int i=1;i<v.size();i++){\n        if(v[i][0]<=h){\n            h=max(h,v[i][1]);\n        }else {\n            ans.push_back({l,h});\n            l=v[i][0];\n            h=v[i][1];\n        }\n        }\n       if(ans.size()==0){\n         ans.push_back({l,h});   \n       }else  {int mxm= max(v[n-2][1],v[n-1][1]);\n        if(ans[ans.size()-1][1]!=mxm){\n            ans.push_back({l,h});\n        }}\n      return ans;\n        \n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-intervals","has_notes":false,"flag_type":1}