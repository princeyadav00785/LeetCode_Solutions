{"id":982852075,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1688106112,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/982852075/","is_pending":"Not Pending","title":"Path with Maximum Probability","memory":"N/A","code":"class Solution {\npublic:\n    void fxn(int n, vector<pair<int, double>> adj[], int s, vector<double>& dis, vector<int>& vis){\n        vis[s] = 1;\n        for(auto x : adj[s]){\n            int node = x.first;\n            double prob = x.second;\n            if(dis[node] < dis[s] * prob){ // Updated the condition here\n                dis[node] = dis[s] * prob;\n                if(!vis[node])\n                    fxn(n, adj, node, dis, vis);\n            }\n        }\n    }\n    \n    double maxProbability(int n, vector<vector<int>>& edges, vector<double>& succProb, int start, int end) {\n        vector<pair<int, double>> adj[n];\n        int a = edges.size();\n        int b = edges[0].size();\n        for(int i = 0; i < a; i++){\n            adj[edges[i][0]].push_back({edges[i][1], succProb[i]});\n            adj[edges[i][1]].push_back({edges[i][0], succProb[i]});\n        }\n        vector<double> dis(n, 0);\n        vector<int> vis(n, 0);\n        dis[start] = 1.0; // Set the starting node distance to 1.0\n       \n        fxn(n, adj, start, dis, vis);\n        \n        return dis[end];\n    }\n};\n","compare_result":"111111111000000000","title_slug":"path-with-maximum-probability","has_notes":false,"flag_type":1}