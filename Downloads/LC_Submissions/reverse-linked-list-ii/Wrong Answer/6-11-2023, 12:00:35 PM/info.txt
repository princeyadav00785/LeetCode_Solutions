{"id":968662111,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1686465035,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/968662111/","is_pending":"Not Pending","title":"Reverse Linked List II","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverse(ListNode* &root,int k){\n        ListNode* prev=NULL;\n        k=k+1;\n        ListNode* curr = root;\n        while(k--){\n            ListNode* nxt= curr->next;\n            curr->next=prev;\n            prev= curr;\n            curr=nxt;\n        }\n        return prev;\n    }\n    \n    ListNode* reverseBetween(ListNode* head, int left, int right) {\n        if(right==left)return head;\n        int n=0;\n        ListNode* a=head;\n        while(a!=NULL){\n            a=a->next;\n            n++;\n        }\n        cout<<n<<\" \";\n        if(right-left==n-1){return reverse(head,n-1);}\n        int k= right-left;\n        int cnt=1,c=0,d=1;\n        ListNode* temp= head;\n                ListNode* temp2 = head;\n        ListNode* temp3 = head;\n        while(cnt<left){\n          temp=temp->next;\n            cnt++;\n        }\n        \n         while(cnt<left){\n          temp2=temp2->next;\n            cnt++;\n        }\n        while(d<right+1){\n            temp3=temp3->next;\n            d++;\n        }\n        temp2->next=reverse(temp,k);\n        temp->next=temp3;\n        return head;\n    }\n};","compare_result":"11111111011011101000111111011110101111000001","title_slug":"reverse-linked-list-ii","has_notes":false,"flag_type":1}