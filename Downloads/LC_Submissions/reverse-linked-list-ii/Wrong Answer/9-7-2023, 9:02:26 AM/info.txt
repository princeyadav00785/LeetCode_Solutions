{"id":1042667865,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1694057546,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1042667865/","is_pending":"Not Pending","title":"Reverse Linked List II","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverse(ListNode* head,int n){\n        if(head==NULL|| head->next==NULL)return head;\n        if(n==1||n==0)return head;\n        ListNode* prev= NULL;\n        ListNode* curr = head;\n        int i=0;\n        while(curr&&i<n)\n        {\n            ListNode* nxt = curr->next;\n            curr->next=prev;\n            prev=curr;\n            curr= nxt;\n            i++;\n        }\n        return prev;\n    }\n    \n    ListNode* reverseBetween(ListNode* head, int left, int right) {\n        ListNode *dummy = new ListNode(0);\n        ListNode *d = new ListNode(0);\n        int l=left-1;\n        d->next=head;\n        while(l--){\n            d=d->next;\n            \n        }\n       \n        ListNode* a=d->next;\n        dummy=head;\n        int j=0;\n        while(j<right){\n            dummy=dummy->next;\n            j++;\n        }\n       \n        ListNode* nxt=dummy;\n        \n     // cout<<dummy->val<<\" \"<<a->val<<\" \"<<d->val;\n        ListNode* x=reverse(a,right-left+1);\n        cout<<x->val;\n        d->next=x;\n            // reverse(a,right-left+1);\n         a->next=nxt;\n        return head;\n       \n        }\n            \n    \n};","compare_result":"11110111010010001011111011111100110101111110","title_slug":"reverse-linked-list-ii","has_notes":false,"flag_type":1}