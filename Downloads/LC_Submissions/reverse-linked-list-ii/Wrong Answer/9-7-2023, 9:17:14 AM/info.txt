{"id":1042676030,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1694058434,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1042676030/","is_pending":"Not Pending","title":"Reverse Linked List II","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n  ListNode* reverse(ListNode* head, int n) {\n    if (head == NULL || head->next == NULL) return head;\n    if (n == 1 || n == 0) return head;\n    \n    ListNode* prev = NULL;\n    ListNode* curr = head;\n    int i = 0;\n    \n    while (curr && i < n) {\n        ListNode* nxt = curr->next;\n        curr->next = prev;\n        prev = curr;\n        curr = nxt;\n        i++;\n    }\n    \n    head = prev; // Update the head to the new head of the reversed sublist\n    \n    return head;\n}\n\n    \n    ListNode* reverseBetween(ListNode* head, int left, int right) {\n        ListNode *dummy = new ListNode(0);\n        int n=0;\n        dummy=head;\n        while(dummy){\n            dummy=dummy->next;\n            n++;\n        }\n        cout<<n;\n        if(left==1&&right==n)return reverse(head,n);\n        ListNode *d = new ListNode(0);\n        int l=left-1;\n        d->next=head;\n        while(l--){\n            d=d->next;\n            \n        }\n\n        ListNode* a=d->next;\n              \n        dummy=head;\n        int j=0;\n        while(j<right){\n            dummy=dummy->next;\n            j++;\n        }\n        // cout<<dummy->val;\n        ListNode* nxt=dummy;\n        \n     // cout<<dummy->val<<\" \"<<a->val<<\" \"<<d->val;\n        ListNode* x=reverse(a,right-left+1);\n        cout<<x->val;\n        d->next=x;\n            // reverse(a,right-left+1);\n         a->next=nxt;\n        return head;\n       \n        }\n            \n    \n};","compare_result":"11111111011011101011111111111110111111111111","title_slug":"reverse-linked-list-ii","has_notes":false,"flag_type":1}