{"id":1062979208,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1696072243,"status":10,"status_display":"Accepted","runtime":"222 ms","url":"/submissions/detail/1062979208/","is_pending":"Not Pending","title":"Sum of Subarray Ranges","memory":"207.9 MB","code":"class Solution {\npublic:\n    int cnt=0;\n    void fxn(vector<int>&nums,long long & ans,int index,vector<int>&v){\n        if(index>=nums.size()){\n            // cnt++;\n            int mxm=INT_MIN,mnm=INT_MAX;\n            for(int i=0;i<v.size();i++){\n                cout<<v[i]<<\" \";\n                if(v[i]>mxm)mxm=v[i];\n                if(v[i]<mnm)mnm=v[i];\n            }\n            cout<<endl;\n            if(v.size())\n            ans+=mxm-mnm;\n            return ;\n        }\n        v.push_back(nums[index]);\n        fxn(nums,ans,index+1,v);\n        v.pop_back();\n        fxn(nums,ans,index+1,v);\n    }\n    long long subArrayRanges(vector<int>& nums) {\n       int n=nums.size();\n        long long ans=0;\n        // vector<int>v;\n        // fxn(nums,ans,0,v);\n        // cout<<cnt;\n        // return ans;\n        for(int i=0;i<n;i++){\n             vector<int>v;\n               int mxm=INT_MIN,mnm=INT_MAX;\n            for(int j=i;j<n;j++){\n                v.push_back(nums[j]);\n                if(nums[j]>mxm)mxm=nums[j];\n                if(nums[j]<mnm)mnm=nums[j];\n            if(v.size())\n            ans+=mxm-mnm;\n            }\n        }\n        \n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-subarray-ranges","has_notes":false,"flag_type":1}