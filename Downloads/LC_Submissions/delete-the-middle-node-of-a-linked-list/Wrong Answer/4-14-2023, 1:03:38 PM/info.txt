{"id":933502113,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1681457618,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/933502113/","is_pending":"Not Pending","title":"Delete the Middle Node of a Linked List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteMiddle(ListNode* head) {\n            ListNode* temp= head;\n        if(head==NULL||head->next==NULL){return head;}\n    ListNode* temp2= head;\n    int cnt=0;\n    while(temp->next!=NULL){\n        cnt++;\n        temp=temp->next;\n    }\n    if(cnt%2==0){cnt=cnt/2-1;}else cnt=cnt/2;\n    for(int i=0;i<cnt;i++){\n        temp2=temp2->next;\n    }\n    temp2->next=temp2->next->next;\n    return head;\n    }\n};","compare_result":"1110011111011111011111111111111111111111111111111111111111111111111111","title_slug":"delete-the-middle-node-of-a-linked-list","has_notes":false,"flag_type":1}