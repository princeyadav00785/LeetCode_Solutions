{"id":1044620802,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1694254385,"status":10,"status_display":"Accepted","runtime":"182 ms","url":"/submissions/detail/1044620802/","is_pending":"Not Pending","title":"Reverse Odd Levels of Binary Tree","memory":"71.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* reverseOddLevels(TreeNode* root) {\n         traverse(root->left,root->right,1);\n         return root;\n    }\n    void traverse(TreeNode* let,TreeNode* rigt ,int lvl){\n        if(let==NULL||rigt==NULL)return ;\n     if(lvl%2!=0){\n         int l=let->val;\n         let->val=rigt->val;\n         rigt->val=l;\n         \n     }\n        traverse(let->right,rigt->left,lvl+1);\n        traverse(let->left,rigt->right,lvl+1);\n    \n    }\n};\n\n","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-odd-levels-of-binary-tree","has_notes":false,"flag_type":1}