{"id":1042784834,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1694068425,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1042784834/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void fxn(TreeNode* root,vector<int>&ans){\n        if(root==NULL)return ;\n        \n        ans.push_back(root->val);\n        if(root->right==NULL)\n            fxn(root->left,ans);\n        fxn(root->right,ans);\n    }\n    \n    \n    vector<int> rightSideView(TreeNode* root) {\n        vector<int>ans;\n        fxn(root,ans);\n        \n        \n        return ans;\n        \n    }\n};","compare_result":"111111001110110111110110100111111111111111101111000111110010110111111111111101111111011111110111001101101110111011111000101100101011111010111110010110011110111101111111101011011110110110111011111111111001100100100101","title_slug":"binary-tree-right-side-view","has_notes":false,"flag_type":1}