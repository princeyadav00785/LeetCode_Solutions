{"id":1042797230,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1694069413,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1042797230/","is_pending":"Not Pending","title":"Binary Tree Right Side View","memory":"12.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> rightSideView(TreeNode* root) {\n          vector<int>a;\n          vector<vector<int>>ans;\n        queue<TreeNode*> q;\n        if(root==NULL){return a;}\n        q.push(root);\n        while(q.size()){\n            vector<int> v;\n            int n= q.size();\n            for(int i=0;i<n;i++){\n                 TreeNode* a= q.front();\n                q.pop();\n                if(a!=NULL){ \n                if(a->left) q.push(a->left);\n                   if(a->right) q.push(a->right);\n                v.push_back(a->val);} \n            }\n              ans.push_back(v);   \n        }\n     \n      \n        for(int i=0;i<ans.size();i++){\n            // for(int j=0;j<ans[i].size();j++){\n                int n=ans[i].size();\n                a.push_back(ans[i][n-1]);\n            // }\n        }\n        return a;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-right-side-view","has_notes":false,"flag_type":1}