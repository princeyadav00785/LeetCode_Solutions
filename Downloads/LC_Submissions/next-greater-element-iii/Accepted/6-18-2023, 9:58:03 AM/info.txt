{"id":973800762,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1687062483,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/973800762/","is_pending":"Not Pending","title":"Next Greater Element III","memory":"6.1 MB","code":"class Solution {\npublic:\n    int nextGreaterElement(int n) {\n        string num = to_string(n);\n        \n        // Find the first decreasing digit from the right\n        int i = num.size() - 2;\n        while (i >= 0 && num[i] >= num[i + 1])\n            i--;\n        \n        // If no decreasing digit found, return -1\n        if (i < 0)\n            return -1;\n        \n        // Find the smallest digit greater than the digit at index i\n        int j = num.size() - 1;\n        while (j > i && num[j] <= num[i])\n            j--;\n        \n        // Swap the digits at index i and j\n        swap(num[i], num[j]);\n        \n        // Reverse the digits after index i to get the smallest permutation\n        reverse(num.begin() + i + 1, num.end());\n        \n        // Convert the string back to an integer\n        long long ans = stoll(num);\n        \n        // Check for 32-bit integer overflow\n        if (ans > INT_MAX)\n            return -1;\n        \n        return ans;\n    }\n};\n","compare_result":"111111111111111111111111111111111111111","title_slug":"next-greater-element-iii","has_notes":false,"flag_type":1}