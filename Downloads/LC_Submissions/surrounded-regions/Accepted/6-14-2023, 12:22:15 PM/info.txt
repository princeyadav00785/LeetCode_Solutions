{"id":970898893,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1686725535,"status":10,"status_display":"Accepted","runtime":"26 ms","url":"/submissions/detail/970898893/","is_pending":"Not Pending","title":"Surrounded Regions","memory":"10.3 MB","code":"class Solution {\npublic:\n    void dfs(vector<vector<char>>& board, vector<vector<int>>& vis, int i, int j) {\n        int m = board.size();\n        int n = board[0].size();\n        if (i < 0 || j < 0 || j > n - 1 || i > m - 1 || vis[i][j] || board[i][j] != 'O')\n            return;\n        vis[i][j] = 1;\n\n        dfs(board, vis, i + 1, j);\n        dfs(board, vis, i - 1, j);\n        dfs(board, vis, i, j + 1);\n        dfs(board, vis, i, j - 1);\n    }\n\n    void solve(vector<vector<char>>& board) {\n        int m = board.size();\n        int n = board[0].size();\n        vector<vector<int>> vis(m, vector<int>(n, 0));\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                if (i == 0 || j == 0 || j == n - 1 || i == m - 1) {\n                    if (!vis[i][j] && board[i][j] == 'O') {\n                        dfs(board, vis, i, j);\n                        vis[i][j] = 1;\n                    }\n                }\n            }\n        }\n\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                if (!vis[i][j] && board[i][j] == 'O') {\n                    board[i][j] = 'X';\n                }\n            }\n        }\n    }\n};\n","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"surrounded-regions","has_notes":false,"flag_type":1}