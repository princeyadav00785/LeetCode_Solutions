{"id":1088910054,"lang":"cpp","lang_name":"C++","time":"2 weeks, 1 day","timestamp":1698820070,"status":10,"status_display":"Accepted","runtime":"124 ms","url":"/submissions/detail/1088910054/","is_pending":"Not Pending","title":"Minimum Deletions to Make Array Divisible","memory":"88.4 MB","code":"class Solution {\npublic:\n    int minOperations(vector<int>& nums, vector<int>& numbers) {\n        int result = numbers[0]; \n    for (int i = 1; i < numbers.size(); i++) {\n        result = std::gcd(result, numbers[i]);\n    }\n        int ans =-1;\n        sort(nums.begin(),nums.end());\n        if(result<\n           nums[0]) return -1;\n        for(int i= 0; i<nums.size();i++){\n       if(result %nums[i]==0){\n           ans= i;\n           break;\n       }\n        }\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"minimum-deletions-to-make-array-divisible","has_notes":false,"flag_type":1}