{"id":985090986,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1688368144,"status":10,"status_display":"Accepted","runtime":"26 ms","url":"/submissions/detail/985090986/","is_pending":"Not Pending","title":"Keys and Rooms","memory":"11.1 MB","code":"class Solution {\npublic:\n    void dfs(int i,vector<int>&vis,vector<int>adj[]){\n        if(vis[i])return ;\n        vis[i]=1;\n        for(auto x:adj[i]){\n            if(!vis[x]){\n                dfs(x,vis,adj);\n            }\n        }\n    }\n    \n    bool canVisitAllRooms(vector<vector<int>>& rooms) {\n          int n= rooms.size();\n        vector<int>adj[n];\n        \n      for(int j=0;j<rooms.size();j++){\nfor(int i=0;i<rooms[j].size();i++){\n    adj[j].push_back(rooms[j][i]);\n}\n      }\n        for(int i=0;i<n;i++){\n            for(int j=0;j<adj[i].size();j++){\n                cout<<adj[i][j];\n            }\n            cout<<endl;\n        }\n    \n        vector<int>vis(n,0);\n        dfs(0,vis,adj);\n        for(auto x:vis){if(x==0)return false;}\n        \n        return true;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"keys-and-rooms","has_notes":false,"flag_type":1}