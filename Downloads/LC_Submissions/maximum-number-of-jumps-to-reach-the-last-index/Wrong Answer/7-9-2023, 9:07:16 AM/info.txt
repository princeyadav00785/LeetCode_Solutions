{"id":989825380,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1688873836,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/989825380/","is_pending":"Not Pending","title":"Maximum Number of Jumps to Reach the Last Index","memory":"N/A","code":"class Solution {\n    \npublic:\n    void fxn(vector<int>& nums, int k,int& cnt,int ind,int n){\n        if(ind>nums.size())return ;\n        \n        if(ind+1<n){\n                            cnt=cnt+1;\n            if(abs(nums[ind+1]-nums[ind])<=k){\n\n                fxn(nums,k,cnt,ind+1,n);\n            }else fxn(nums,k,cnt,ind+2,n);\n        }\n        return;\n    }\n    \n    int maximumJumps(vector<int>& nums, int k) {\n        if(k==0)return -1;\n        int cnt=0,n=nums.size();\n        fxn(nums,k,cnt,0,n);\n        \n        return cnt;\n    }\n};","compare_resulttitle_slug":"maximum-number-of-jumps-to-reach-the-last-index","has_notes":false,"flag_type":1}