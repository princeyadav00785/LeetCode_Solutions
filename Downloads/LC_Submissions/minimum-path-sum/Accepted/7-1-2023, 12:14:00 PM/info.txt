{"id":983547433,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1688193840,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/983547433/","is_pending":"Not Pending","title":"Minimum Path Sum","memory":"10 MB","code":"class Solution {\npublic:\n    int minPathSum(vector<vector<int>>& grid) {\nint n = grid.size();\nint m = grid[0].size();\nvector<vector<int>> dp(n + 1, vector<int>(m + 1, 0));\ndp[0][0] = grid[0][0];\nfor (int i = 0; i < n; i++) {\n    for (int j = 0; j < m; j++) {\n        if (i == 0 && j == 0)\n            dp[i][j] = grid[0][0];\n        else if (i == 0 && j != 0) {\n            dp[i][j] = grid[i][j] + dp[i][j - 1];\n        } else if (j == 0 && i != 0) {\n            dp[i][j] = grid[i][j] + dp[i - 1][j];\n        } else {\n            dp[i][j] = grid[i][j] + min(dp[i - 1][j], dp[i][j - 1]);\n        }\n    }\n}\nreturn dp[n - 1][m - 1];\n\n    }\n};\n\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-path-sum","has_notes":false,"flag_type":1}