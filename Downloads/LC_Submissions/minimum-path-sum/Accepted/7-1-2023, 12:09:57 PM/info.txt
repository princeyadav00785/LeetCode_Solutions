{"id":983545104,"lang":"java","lang_name":"Java","time":"4 months, 2 weeks","timestamp":1688193597,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/983545104/","is_pending":"Not Pending","title":"Minimum Path Sum","memory":"44.3 MB","code":"class Solution {\n    public int minPathSum(int[][] grid) {\n        \n            int height = grid.length;\n            int width = grid[0].length;\n            for (int row = 0; row < height; row++) {\n                for (int col = 0; col < width; col++) {\n                    if(row == 0 && col == 0) grid[row][col] = grid[row][col];\n                    else if(row == 0 && col != 0) grid[row][col] = grid[row][col] + grid[row][col - 1];\n                    else if(col == 0 && row != 0) grid[row][col] = grid[row][col] + grid[row - 1][col];\n                    else grid[row][col] = grid[row][col] + Math.min(grid[row - 1][col], grid[row][col - 1]);\n                }\n            }\n            return grid[height - 1][width - 1];\n\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-path-sum","has_notes":false,"flag_type":1}