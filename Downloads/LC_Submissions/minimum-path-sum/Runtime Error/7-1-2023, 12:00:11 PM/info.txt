{"id":983539658,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1688193011,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/983539658/","is_pending":"Not Pending","title":"Minimum Path Sum","memory":"N/A","code":"class Solution {\npublic:\n    int minPathSum(vector<vector<int>>& grid) {\n       int n = grid.size();\n        int m = grid[0].size();\n        if(n==1){\n            int sum=0;\n            for(int i=0;i<m;i++){\n                sum+=grid[0][i];\n            }\n            return sum;\n        }\n         if(m==1){\n            int sum=0;\n            for(int i=0;i<n;i++){\n                sum+=grid[i][0];\n            }\n            return sum;\n        }\n        vector<vector<int>>dp(n+1,vector<int>(n+1,0));\n        dp[0][0]=grid[0][0];\n        for(int i=0;i<n;i++){\n            for(int j=0;j<m;j++){\n                int down = INT_MAX;\n                int right= INT_MAX;\n                if(i==0&&j==0)dp[i][j]=grid[0][0];\n                else{\n                if(i-1>-1){down =  dp[i-1][j];}\n                if(j-1>-1)right= dp[i][j-1];\n                dp[i][j]= grid[i][j]+ min(right,down);}\n            }\n            \n        }\n        return dp[n-1][m-1];\n    }\n};","compare_result":"1111111111110000000000000000000000000000000000000000000000000","title_slug":"minimum-path-sum","has_notes":false,"flag_type":1}