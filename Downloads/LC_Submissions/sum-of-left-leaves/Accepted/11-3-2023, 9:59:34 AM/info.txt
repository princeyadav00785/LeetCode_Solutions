{"id":1090350646,"lang":"cpp","lang_name":"C++","time":"1 week, 6 days","timestamp":1698985774,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1090350646/","is_pending":"Not Pending","title":"Sum of Left Leaves","memory":"13.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int sum=0;\n   void fxn(TreeNode* root,int f){\n       if(!root)return ;\n        if(!root->left&&!root->right){\n            if(f==1)sum+=root->val;\n            return ;\n        }\n       fxn(root->left,1);\n       fxn(root->right,0);\n    }\n    \n    \n    int sumOfLeftLeaves(TreeNode* root) {\n        if(root==NULL||(!root->left&&!root->right))return sum;\n        fxn(root,0);\n        return sum;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-left-leaves","has_notes":false,"flag_type":1}