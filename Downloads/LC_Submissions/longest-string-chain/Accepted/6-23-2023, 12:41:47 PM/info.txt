{"id":977660028,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1687504307,"status":10,"status_display":"Accepted","runtime":"125 ms","url":"/submissions/detail/977660028/","is_pending":"Not Pending","title":"Longest String Chain","memory":"13.2 MB","code":"class Solution {\npublic:\n    bool isPredecessor(const string& s1, const string& s2) {\n        if (s1.size() != s2.size() + 1)\n            return false;\n        \n        int i = 0, j = 0;\n        int mismatch = 0;\n        \n        while (i < s1.size() && j < s2.size()) {\n            if (s1[i] == s2[j]) {\n                i++;\n                j++;\n            } else {\n                mismatch++;\n                i++;\n            }\n            \n            if (mismatch > 1)\n                return false;\n        }\n        \n        return true;\n    }\n\n    int longestStrChain(vector<string>& words) {\n        sort(words.begin(), words.end(), [](const string& a, const string& b) {\n            return a.size() < b.size();\n        });\n        \n        int n = words.size();\n        vector<int> dp(n, 1);\n        int maxLength = 1;\n        \n        for (int i = 1; i < n; i++) {\n            for (int j = 0; j < i; j++) {\n                if (isPredecessor(words[i], words[j]))\n                    dp[i] = max(dp[i], dp[j] + 1);\n            }\n            \n            maxLength = max(maxLength, dp[i]);\n        }\n        \n        return maxLength;\n    }\n};\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-string-chain","has_notes":false,"flag_type":1}