{"id":964837842,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1686022931,"status":10,"status_display":"Accepted","runtime":"17 ms","url":"/submissions/detail/964837842/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"20.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int fxn(TreeNode* root){\n        if(root==NULL){\n            return 0;\n        }\n        int l= fxn(root->left);\n        int r= fxn(root->right);\n        if(abs(l-r)>1){return -1;}\n        if(l==-1||r==-1){return -1;}else{\n            return 1+max(l,r);\n        }\n    }\n    \n    bool isBalanced(TreeNode* root) {\n        int ans = fxn(root);\n        if(ans==-1){return false ;}else return true;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree","has_notes":false,"flag_type":1}