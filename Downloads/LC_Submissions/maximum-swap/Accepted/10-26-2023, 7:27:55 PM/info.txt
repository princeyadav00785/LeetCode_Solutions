{"id":1084633919,"lang":"cpp","lang_name":"C++","time":"3Â weeks","timestamp":1698328675,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1084633919/","is_pending":"Not Pending","title":"Maximum Swap","memory":"6.4 MB","code":"class Solution {\npublic:\n    int maximumSwap(int num) {\n        string numStr = to_string(num);\n        vector<int> lastIdx(10, -1);  // Store the last index of each digit (0 to 9).\n\n        // Populate lastIdx with the last index of each digit in numStr.\n        for (int i = 0; i < numStr.size(); i++) {\n            lastIdx[numStr[i] - '0'] = i;\n        }\n\n        // Iterate through the digits of numStr and find the maximum digit to swap.\n        for (int i = 0; i < numStr.size(); i++) {\n            for (int d = 9; d > numStr[i] - '0'; d--) {\n                if (lastIdx[d] > i) {\n                    swap(numStr[i], numStr[lastIdx[d]]);\n                    return stoi(numStr);  // Return the result as an integer.\n                }\n            }\n        }\n\n        return num;  // If no swap is needed, return the original number.\n    }\n};\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-swap","has_notes":false,"flag_type":1}