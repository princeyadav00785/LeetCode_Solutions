{"id":1046583953,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1694443051,"status":10,"status_display":"Accepted","runtime":"109 ms","url":"/submissions/detail/1046583953/","is_pending":"Not Pending","title":"Longest Univalue Path","memory":"71.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int fxn(TreeNode* root,int& maxi){\n         if(root==NULL){\n            return 0;\n        }\n        int l=fxn(root->left,maxi);\n        int r= fxn(root->right,maxi);\n        int dl=0,dr=0;\n        if(root->left&&root->val==root->left->val){dl=l+1;}\n        if(root->right&&root->val==root->right->val)dr=r+1;\n            maxi= max(maxi,dl+dr);\n            return max(dl,dr);\n        \n    \n       \n    }\n    int longestUnivaluePath(TreeNode* root) {\n          int a=0;\n        int ans = fxn(root,a);\n        return a;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-univalue-path","has_notes":false,"flag_type":1}