{"id":923769569,"lang":"cpp","lang_name":"C++","time":"7 months, 3 weeks","timestamp":1680025269,"status":10,"status_display":"Accepted","runtime":"25 ms","url":"/submissions/detail/923769569/","is_pending":"Not Pending","title":"Kth Smallest Element in a BST","memory":"24.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void inorder(TreeNode* root ,vector<int>& v){\n        if(root==NULL){\n            return ;\n        }\n        inorder(root->left,v);\n        v.push_back(root->val);\n        inorder(root->right,v);\n        return ;\n    }\n    int kthSmallest(TreeNode* root, int k) {\n        vector<int> v;\n        inorder(root,v);\n          return v[k-1];\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"kth-smallest-element-in-a-bst","has_notes":false,"flag_type":1}