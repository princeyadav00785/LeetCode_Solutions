{"id":1047142161,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1694494876,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1047142161/","is_pending":"Not Pending","title":"Kth Smallest Element in a BST","memory":"24.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int cnt=0;\n    int dfs(TreeNode* root){\n        if(root==NULL)return -1;\n        int ans = dfs(root->left);\n        if(ans!=-1)return ans;\n        if(cnt==1)return root->val;\n        cnt--;\n       return dfs(root->right);\n        \n    }\n    \n    int kthSmallest(TreeNode* root, int k) {\n        cnt=k;\n        return dfs(root);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"kth-smallest-element-in-a-bst","has_notes":false,"flag_type":1}