{"id":927187800,"lang":"cpp","lang_name":"C++","time":"7 months, 2 weeks","timestamp":1680524525,"status":10,"status_display":"Accepted","runtime":"115 ms","url":"/submissions/detail/927187800/","is_pending":"Not Pending","title":"Deepest Leaves Sum","memory":"62 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    \n    vector<vector<int>> levelOrder(TreeNode *root)\n{vector<vector<int>>ans;\n  if(root==NULL)return ans;\n        queue<TreeNode*> q;\n      \n        q.push(root);\n        while(!q.empty()){\n            int size= q.size();\n            vector<int>v;\n            for(int i=0;i<size;i++){\n                TreeNode *curr=q.front();\n                q.pop();\n                if(root->left!=NULL) q.push(root->left);\n                 if(root->right!=NULL) q.push(root->right);\n                v.push_back(root->val);\n            }\n            ans.push_back(v);\n        }\n        return ans;\n        \n}\n    \n    int deepestLeavesSum(TreeNode* root) {\n     // vector<vector<int>>ans=levelOrder(root);\n        // vector<int>v=ans[ans.size()-1];\n        // int sum = 0;\n        // for(int i=0;i<v.size();i++){\n        //     sum+=v[i];\n        // }\n        // return sum;\n                queue<TreeNode*>q;\n        q.push(root);\n        int sum;\n        while(!q.empty()){ \n            sum=0;\n            int size = q.size();\n            while(size--){\n                TreeNode*temp = q.front(); \n                sum+=temp->val;\n                q.pop();\n                if(temp->left!=NULL){\n                    q.push(temp->left);\n                }\n                if(temp->right!=NULL){\n                    q.push(temp->right);\n                }\n            }\n        }\n        return sum;\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"deepest-leaves-sum","has_notes":false,"flag_type":1}