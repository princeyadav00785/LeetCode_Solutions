{"id":1091871992,"lang":"cpp","lang_name":"C++","time":"1 week, 4 days","timestamp":1699168594,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1091871992/","is_pending":"Not Pending","title":"Implement Queue using Stacks","memory":"7.5 MB","code":"#include <stack>\n\nclass MyQueue {\nprivate:\n    std::stack<int> inStack; // For push operations\n    std::stack<int> outStack; // For pop and peek operations\n\n    // Move elements from inStack to outStack\n    void transferElements() {\n        if (outStack.empty()) {\n            while (!inStack.empty()) {\n                outStack.push(inStack.top());\n                inStack.pop();\n            }\n        }\n    }\n\npublic:\n    MyQueue() {}\n\n    // Push element x to the back of the queue\n    void push(int x) {\n        inStack.push(x);\n    }\n\n    // Removes the element from the front of the queue and returns it\n    int pop() {\n        transferElements();\n        int front = outStack.top();\n        outStack.pop();\n        return front;\n    }\n\n    // Returns the element at the front of the queue\n    int peek() {\n        transferElements();\n        return outStack.top();\n    }\n\n    // Returns true if the queue is empty, false otherwise\n    bool empty() {\n        return inStack.empty() && outStack.empty();\n    }\n};\n","compare_result":"1111111111111111111111","title_slug":"implement-queue-using-stacks","has_notes":false,"flag_type":1}