{"id":1042764653,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1694066734,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/1042764653/","is_pending":"Not Pending","title":"Odd Even Linked List","memory":"10.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* oddEvenList(ListNode* head) {\n        if(head==NULL||head->next==NULL){return head;}\n\n\n  ListNode*odd=new ListNode(-1);\n                ListNode*temp2=odd;\n         ListNode*even=new ListNode(-1);\n        ListNode*temp=even;\n        ListNode* traversal=head;\n       \n        \n        int cnt=1;\n        \n        while(traversal){\n            if(cnt%2!=0){\n                if(odd)\n                odd->next=traversal;\n                odd= traversal;\n                \n            \n            }else {\n                if(even)\n                even->next=traversal;\n            even =traversal;\n            }\n            cnt++;\n            traversal=traversal->next;\n        }\n        odd->next=NULL;\n        even->next=NULL;\n          odd->next=temp->next;\n        return temp2->next;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"odd-even-linked-list","has_notes":false,"flag_type":1}