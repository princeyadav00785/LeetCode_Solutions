{"id":1042761850,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1694066495,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/1042761850/","is_pending":"Not Pending","title":"Odd Even Linked List","memory":"10.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* oddEvenList(ListNode* head) {\n        if(head==NULL||head->next==NULL){return head;}\n      ListNode* odd = new ListNode(-1);\nListNode* temp1 = odd;\nListNode* even = new ListNode(-1);\nListNode* temp2 = even;\nListNode* traversal = head;\nint cnt = 1;\n\nwhile (traversal) {\n    if (cnt % 2 != 0) {\n        odd->next = traversal;\n        odd = traversal;\n    } else {\n        even->next = traversal;\n        even = traversal;\n    }\n    cnt++;\n    traversal = traversal->next;\n}\n\n// Terminate both lists\nodd->next = nullptr;\neven->next = nullptr;\n\n// Combine the odd and even lists\nodd->next = temp2->next;\n\nreturn temp1->next;\n\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"odd-even-linked-list","has_notes":false,"flag_type":1}