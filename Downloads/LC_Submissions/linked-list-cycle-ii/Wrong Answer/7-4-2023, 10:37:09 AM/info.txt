{"id":985843682,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1688447229,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/985843682/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *detectCycle(ListNode *head) {\n\n        ListNode* slow=head;\n        ListNode* fast= head;\n   \n          while(fast!=NULL&&fast->next!=NULL){\n              slow=slow->next;\n              fast= fast->next->next;\n              if(slow==fast)break;\n          }\n          slow=head;\n      while(fast!=NULL&&fast->next!=NULL){\n          slow=slow->next;\n          fast=fast->next;\n          if(slow==fast)return slow;\n      }\n          return NULL;\n       \n    }\n};","compare_result":"10111111111111111","title_slug":"linked-list-cycle-ii","has_notes":false,"flag_type":1}