{"id":945583371,"lang":"cpp","lang_name":"C++","time":"6 months, 2 weeks","timestamp":1683392544,"status":10,"status_display":"Accepted","runtime":"147 ms","url":"/submissions/detail/945583371/","is_pending":"Not Pending","title":"Number of Subsequences That Satisfy the Given Sum Condition","memory":"49.9 MB","code":"class Solution {\npublic:\n    int numSubseq(vector<int>& A, int target) {\n//         int l=0, h= nums.size()-1,mod=1e9+7,n=nums.size();\n//         vector<int> v(nums.size()+1,1);\n//         sort(nums.begin(),nums.end());\n//         for(int i=1;i<=n;i++){\n//             v[i]=v[i-1]*2%mod;\n//         }\n//         while(!(nums[l]+nums[h]<target)){\n//             h--;\n//         }\n//         return v[h-l+1];\n        \n        \n           sort(A.begin(), A.end());\n        int res = 0, n = A.size(), l = 0, r = n - 1, mod = 1e9 + 7;\n        vector<int> pows(n, 1);\n        for (int i = 1 ; i < n ; ++i)\n            pows[i] = pows[i - 1] * 2 % mod;\n        while (l <= r) {\n            if (A[l] + A[r] > target) {\n                r--;\n            } else {\n                res = (res + pows[r - l++]) % mod;\n            }\n        }\n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-subsequences-that-satisfy-the-given-sum-condition","has_notes":false,"flag_type":1}