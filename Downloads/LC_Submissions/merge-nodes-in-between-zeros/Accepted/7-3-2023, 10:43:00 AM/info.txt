{"id":985016191,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1688361180,"status":10,"status_display":"Accepted","runtime":"828 ms","url":"/submissions/detail/985016191/","is_pending":"Not Pending","title":"Merge Nodes in Between Zeros","memory":"274.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeNodes(ListNode* head) {\n        ListNode*  dummy= new ListNode(-1);\n        ListNode*ans= dummy;\n        int sum=0;\n        head= head->next;\n        while(head){\n            if(head->val!=0){\n                sum+=head->val;\n            }else{\n                dummy->next= new ListNode(sum);\n                sum=0;\n                dummy=dummy->next;\n            }\n            head=head->next;\n        }\n        return ans->next;\n    }\n    \n};","compare_result":"111111111111111111111111111111111111111","title_slug":"merge-nodes-in-between-zeros","has_notes":false,"flag_type":1}