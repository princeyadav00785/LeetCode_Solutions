{"id":964858772,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1686025285,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/964858772/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal II","memory":"12.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrderBottom(TreeNode* root) {\n        vector<vector<int>>ans;\n        \n        if(root==NULL){\n            return ans;\n        }\n        queue<TreeNode*>q;\n        q.push(root);\n        while(!q.empty()){\n            vector<int> v;\n            int n= q.size();\n            for(int i=0;i<n;i++){\n                TreeNode* a=q.front();\n                q.pop();\n                if(a->left)q.push(a->left);\n                if(a->right)q.push(a->right);\n                v.push_back(a->val);\n            }\n            ans.push_back(v);\n        }\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        reverse(ans.begin(),ans.end());\n        return ans;\n    }\n    \n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal-ii","has_notes":false,"flag_type":1}