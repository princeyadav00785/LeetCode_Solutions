{"id":968522737,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1686452533,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/968522737/","is_pending":"Not Pending","title":"Lexicographically Smallest String After Substring Operation","memory":"N/A","code":"class Solution {\npublic:\n    string smallestString(string s) {\n        int n=s.length(),ind=0;\n        string ans=\"\";\n        for(int i=0;i<n;i++){\n            if(s[i]!='a'){\n                 ind=i;\n                break;\n            }\n           \n        }\n        int l=0;\n        for(int i=0;i<n;i++){\n            if(s[i]=='a')l=i;\n        }\n        for(int i=0;i<ind;i++){\n            ans+='a';\n        }\n    if(l==0&&ind==0)\n        {\n        for(int i=ind;i<n;i++){\n            if(s[i]=='z'){\n                ans+='a';\n            }else\n            ans+= char( (int)s[i]-1);\n        }}\n        else if(ind==0&&l!=0){\n              for(int i=ind;i<l;i++){\n            if(s[i]=='z'){\n                ans+='a';\n            }else\n            ans+= char( (int)s[i]-1);\n        }\n            if(l!=n-1)\n       {     for(int i=l;i<n;i++){\n                ans+=s[i];\n            }}\n        }else if(ind!=0&&l!=0&&ind!=l){\n            for(int i=ind;i<=l;i++){\n            if(s[i]=='z'){\n                ans+='a';\n            }else\n            ans+= char( (int)s[i]-1);\n        }\n            if(l!=n-1)\n       {     for(int i=l+1;i<n;i++){\n                ans+=s[i];\n            }}\n        }else{\n                        for(int i=ind;i<=l;i++){\n            if(s[i]=='z'){\n                ans+='a';\n            }else\n            ans+= char( (int)s[i]-1);\n        }\n            if(l!=n-1)\n       {     for(int i=l+1;i<n;i++){\n                ans+=s[i];\n            }}\n        }\n        \n        \n        \n        return ans;\n    }\n};","compare_resulttitle_slug":"lexicographically-smallest-string-after-substring-operation","has_notes":false,"flag_type":1}