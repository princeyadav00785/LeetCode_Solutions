{"id":1046542551,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1694439861,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1046542551/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"9.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* fxn(TreeNode* root){\n      if(root==NULL)return NULL;\n        if(!root->left&&!root->right)return NULL;   \n        if(!root->right){\n            root->right=root->left;\n            root->left=NULL;\n            \n        }\n      else  if(!root->left){\n            root->left=root->right;\n            root->right=NULL;\n        }else{\n              TreeNode* temp=root->right;\n            root->right=root->left;\n            root->left=temp;\n        }\n        fxn(root->left);\n        fxn(root->right);\n        return root;\n     \n\n    }\n    \n    TreeNode* invertTree(TreeNode* root) {\n        if(root==NULL)return root;\n        if(!root->left&&!root->right)return root;\n        TreeNode* ans= fxn(root);\n        return ans;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree","has_notes":false,"flag_type":1}