{"id":1046261844,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1694412301,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1046261844/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* fxn(TreeNode* root){\n      if(root==NULL)return root;\n        if(!root->left&&!root->right)return root;   \n        if(!root->right){\n            TreeNode* temp=root->left;\n            root->right=temp;\n            root->left=NULL;\n            \n        }\n        if(!root->left){\n            TreeNode* temp=root->right;\n            root->left=temp;\n            root->right=NULL;\n        }else{\n              TreeNode* temp=root->right;\n            root->right=root->left;\n            root->left=temp;\n        }\n        fxn(root->left);\n        fxn(root->right);\n        return root;\n    }\n    \n    TreeNode* invertTree(TreeNode* root) {\n        if(root==NULL)return root;\n        if(!root->left&&!root->right)return root;\n        TreeNode* ans= fxn(root);\n        return ans;\n    }\n};","compare_result":"11110101001000001010010010000000010000001001000001010000001010010010000100100","title_slug":"invert-binary-tree","has_notes":false,"flag_type":1}