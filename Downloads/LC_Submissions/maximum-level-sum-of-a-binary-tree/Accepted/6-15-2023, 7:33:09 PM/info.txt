{"id":971921561,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1686837789,"status":10,"status_display":"Accepted","runtime":"211 ms","url":"/submissions/detail/971921561/","is_pending":"Not Pending","title":"Maximum Level Sum of a Binary Tree","memory":"107.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n \n    int maxLevelSum(TreeNode* root) {\n        int sum=INT_MIN,lvl=0,ans=-1;\n         queue<TreeNode*> q;\n        q.push(root);\n        while(!q.empty()){\n            lvl++;\n            int vaal=0;\n            int s=q.size();\n            for(int i=0;i<s;i++){\n                TreeNode* a= q.front();\n            q.pop();\n                vaal+=a->val;\n                if(a->left)q.push(a->left);\n            if(a->right)q.push(a->right);\n            }\n            if(vaal>sum){\n                ans=lvl;\n                sum = vaal;\n            }}\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111","title_slug":"maximum-level-sum-of-a-binary-tree","has_notes":false,"flag_type":1}