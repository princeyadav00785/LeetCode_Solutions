{"id":1088835451,"lang":"cpp","lang_name":"C++","time":"2 weeks, 1 day","timestamp":1698812018,"status":10,"status_display":"Accepted","runtime":"31 ms","url":"/submissions/detail/1088835451/","is_pending":"Not Pending","title":"Kth Largest Element in a Stream","memory":"20.2 MB","code":"class KthLargest {\npublic:\n    priority_queue<int,vector<int>,greater<int>>q;\n    int K=0,prevmax=INT_MIN;\n    KthLargest(int k, vector<int>& nums) {\n    K=k;\n        \n        for(int i=0;i<nums.size();i++){\n             q.push(nums[i]);\n            if(q.size()>k){\n                q.pop();\n            }\n\n        }\n        \n    }\n    \n    int add(int val) {\n\n        q.push(val);\n     if(q.size()>K){\n                q.pop();\n            }\n       \n         return q.top();  \n    }\n};\n\n/**\n * Your KthLargest object will be instantiated and called as such:\n * KthLargest* obj = new KthLargest(k, nums);\n * int param_1 = obj->add(val);\n */\n\n\n// 2 3 4 5 5 8 9 10","compare_result":"1111111111","title_slug":"kth-largest-element-in-a-stream","has_notes":false,"flag_type":1}