{"id":1088830664,"lang":"cpp","lang_name":"C++","time":"2 weeks, 1 day","timestamp":1698811425,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1088830664/","is_pending":"Not Pending","title":"Kth Largest Element in a Stream","memory":"N/A","code":"class KthLargest {\npublic:\n    priority_queue<int>q;\n    int K=0;\n    KthLargest(int k, vector<int>& nums) {\n    K=k;\n        \n        for(int i=0;i<nums.size();i++){\n            q.push(nums[i]);\n        }\n        \n    }\n    \n    int add(int val) {\n        q.push(val);\n     \n       priority_queue<int>p;\n        p=q;\n        int n=K,m=q.size();\n        if(n>m)return -1;\n        else          \n         {      \n            n--;\n            while(n--){\n            p.pop();\n                \n        }\n          return p.top();\n        }\n           \n    }\n};\n\n/**\n * Your KthLargest object will be instantiated and called as such:\n * KthLargest* obj = new KthLargest(k, nums);\n * int param_1 = obj->add(val);\n */\n\n\n// 2 3 4 5 5 8 9 10","compare_result":"1111111110","title_slug":"kth-largest-element-in-a-stream","has_notes":false,"flag_type":1}