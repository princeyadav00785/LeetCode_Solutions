{"id":1042662986,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1694056993,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1042662986/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"8.3 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {        \n//         if(head==NULL||head->next==NULL){return head;}\n//         ListNode* prev=NULL;\n//         ListNode* temp= head;\n//        while(temp!=NULL){\n//            ListNode* nxt= temp->next;\n//            temp->next=prev;\n//            prev=temp;\n//            temp=nxt;\n//        }\n//         return prev;\n        if(head==NULL|| head->next==NULL)return head;\n        int n=INT_MAX;\n        if(n==1||n==0)return head;\n        ListNode* prev= NULL;\n        ListNode* curr = head;\n        int i=0;\n        while(curr&&i<n)\n        {\n            ListNode* nxt = curr->next;\n            curr->next=prev;\n            prev=curr;\n            curr= nxt;\n            i++;\n        }\n        return prev;\n       \n    }\n};","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list","has_notes":false,"flag_type":1}