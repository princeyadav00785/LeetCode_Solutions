{"id":968619227,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1686460640,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/968619227/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"8.2 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n//                 ListNode* prev =NULL;\n//         ListNode* curr = head;\n//         if(head==NULL||head->next==NULL){\n//             return head;\n//         }\n//         while(curr!=NULL){\n//             ListNode* NEXT =curr->next;\n//             curr->next=prev;\n//             prev=curr;\n//             curr=NEXT;\n            \n//         }\n//         return prev;\n        \n        \n        if(head==NULL||head->next==NULL){return head;}\n        ListNode* prev=NULL;\n        ListNode* temp= head;\n       while(temp!=NULL){\n           ListNode* nxt= temp->next;\n           temp->next=prev;\n           prev=temp;\n           temp=nxt;\n       }\n        return prev;\n        \n    }\n};","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list","has_notes":false,"flag_type":1}