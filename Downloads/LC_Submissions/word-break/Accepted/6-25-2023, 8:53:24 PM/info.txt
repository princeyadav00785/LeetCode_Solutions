{"id":979379802,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1687706604,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/979379802/","is_pending":"Not Pending","title":"Word Break","memory":"15 MB","code":"class Solution {\npublic:\n    bool wordBreak(string s, vector<string>& wordDict) {\n        unordered_set<string> wordSet(wordDict.begin(), wordDict.end());\n        unordered_map<string, bool> memo;\n        return isWordBreak(s, wordSet, memo);\n    }\n    \n    bool isWordBreak(string s, unordered_set<string>& wordSet, unordered_map<string, bool>& memo) {\n        if (s.empty())\n            return true;\n        \n        if (memo.count(s))\n            return memo[s];\n        \n        for (int i = 1; i <= s.length(); i++) {\n            string prefix = s.substr(0, i);\n            if (wordSet.count(prefix) && isWordBreak(s.substr(i), wordSet, memo)) {\n                memo[s] = true;\n                return true;\n            }\n        }\n        \n        memo[s] = false;\n        return false;\n    }\n};\n","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"word-break","has_notes":false,"flag_type":1}