{"id":1085505391,"lang":"cpp","lang_name":"C++","time":"2 weeks, 6 days","timestamp":1698426079,"status":10,"status_display":"Accepted","runtime":"452 ms","url":"/submissions/detail/1085505391/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"233.6 MB","code":"class Solution {\npublic:\n    string longestPalindrome(string s) {\n        string str;\n        int res=0;\n        string s1=s;\n        string s2=s;\n        reverse(s2.begin(), s2.end());\n        int m=s1.size();\n        int n=s2.size();\n        int t[m+1][n+1];\n\t\t//initialization\n        for(int i=0; i<m+1; i++)\n            for(int j=0; j<n+1; j++)\n            {\n                if(i==0 || j==0)\n                    t[i][j]=0;\n            }\n        \n\n        for(int i=1; i<m+1; i++)\n            for(int j=1; j<n+1; j++)\n            {\n                if(s1[i-1]==s2[j-1])\n                {\n                    t[i][j]=1+t[i-1][j-1];\n                    if(res<t[i][j])\n                    {\n                        string temp=s.substr(i-t[i][j],t[i][j]);\n                        string temp2=temp;\n                        reverse(temp2.begin(), temp2.end());\n                        if(temp==temp2) \n                        {\n                        res=t[i][j];\n                        str=temp;\n                        }\n                    }\n                }\n                else\n                    t[i][j]=0;\n            }\n        return str;\n        \n        \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-substring","has_notes":false,"flag_type":1}