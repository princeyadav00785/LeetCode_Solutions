{"id":890319078,"lang":"cpp","lang_name":"C++","time":"9 months, 2 weeks","timestamp":1675371874,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/890319078/","is_pending":"Not Pending","title":"Binary Tree Preorder Traversal","memory":"8.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    public: \n    void traversal(TreeNode* root , vector<int> &v){\n        if(root==NULL){\n            return ;\n        }\n          v.push_back(root->val);\n           traversal(root->left,v);\n           traversal(root->right,v);\n    }\npublic:\n    vector<int> preorderTraversal(TreeNode* root) {\n        vector<int> x;\n        traversal(root,x);\n        return x;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-preorder-traversal","has_notes":false,"flag_type":1}