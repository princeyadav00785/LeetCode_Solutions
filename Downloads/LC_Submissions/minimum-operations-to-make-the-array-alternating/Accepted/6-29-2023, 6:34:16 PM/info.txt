{"id":982349170,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1688043856,"status":10,"status_display":"Accepted","runtime":"330 ms","url":"/submissions/detail/982349170/","is_pending":"Not Pending","title":"Minimum Operations to Make the Array Alternating","memory":"104 MB","code":"class Solution\n{\npublic:\n    int minimumOperations(vector<int> &nums)\n    {\n        int mark[100001][2] = {}, i, j, k, res = 0;\n        for (i = 0; i < nums.size(); i++)\n            mark[nums[i]][i & 1]++;\n        for (i = 1, j = k = 0; i <= 100000; i++)\n            res = max(res, max(mark[i][0] + k, mark[i][1] + j)), j = max(j, mark[i][0]), k = max(k, mark[i][1]);\n        return nums.size() - res;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-operations-to-make-the-array-alternating","has_notes":false,"flag_type":1}