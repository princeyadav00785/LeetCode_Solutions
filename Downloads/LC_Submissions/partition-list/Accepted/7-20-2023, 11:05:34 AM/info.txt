{"id":999046399,"lang":"cpp","lang_name":"C++","time":"3 months, 4 weeks","timestamp":1689831334,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/999046399/","is_pending":"Not Pending","title":"Partition List","memory":"10.2 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* partition(ListNode* head, int x) {\n    ListNode node1(0),node2(0);\n        ListNode* p1= &node1;\n        ListNode* p2 = &node2;\n        while(head){\n            if(head->val<x){\n                p1->next= head;\n                p1=p1->next;\n            }else{\n                p2->next=head;\n                p2=p2->next;\n            }\n         head=head->next;   \n        }\n        p2->next=NULL;\n        p1->next= node2.next;\n        return node1.next;\n    }\n};\n\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-list","has_notes":false,"flag_type":1}