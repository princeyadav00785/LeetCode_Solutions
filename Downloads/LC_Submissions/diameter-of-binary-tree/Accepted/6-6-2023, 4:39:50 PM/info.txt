{"id":965097380,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1686049790,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/965097380/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"20.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n        int fxn(TreeNode*root,int& maxi){\n        if(root==NULL){\n            return 0;\n        }\n        int l=fxn(root->left,maxi);\n        int r= fxn(root->right,maxi);\n            maxi=max(maxi,l+r);\n        return 1+max(l,r);\n    }\n    \n    int diameterOfBinaryTree(TreeNode* root) {\n        int a=0;\n        int ans = fxn(root,a);\n        return a;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree","has_notes":false,"flag_type":1}