{"id":1022993332,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1692189900,"status":10,"status_display":"Accepted","runtime":"247 ms","url":"/submissions/detail/1022993332/","is_pending":"Not Pending","title":"Sliding Window Maximum","memory":"144 MB","code":"class Solution {\n    using int2=pair<int, int>; //(nums[i], i)\npublic:\n\n    vector<int> maxSlidingWindow(vector<int>& nums, int k) {\n        int n=nums.size();\n        priority_queue<int2> pq;\n\n        vector<int> ans(n-k+1);\n        for (int i=0; i<k; i++)\n            pq.push({nums[i], i});\n        \n        ans[0]=pq.top().first;\n        for(int i=k; i<n; i++){\n            while(!pq.empty() && pq.top().second<=(i-k))\n                pq.pop(); //Pop up element not in the window\n            pq.push({nums[i], i});\n            ans[i-k+1]=pq.top().first;//Max element for this window\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"sliding-window-maximum","has_notes":false,"flag_type":1}