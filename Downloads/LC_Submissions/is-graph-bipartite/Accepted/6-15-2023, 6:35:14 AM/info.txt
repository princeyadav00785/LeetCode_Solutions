{"id":971503107,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1686791114,"status":10,"status_display":"Accepted","runtime":"31 ms","url":"/submissions/detail/971503107/","is_pending":"Not Pending","title":"Is Graph Bipartite?","memory":"15.9 MB","code":"class Solution {\npublic:\n    bool dfs(vector<int> adj[], int i, int color[], int col) {\n        color[i] = col;\n\n        for (auto it : adj[i]) {\n            if (color[it] == -1) {\n                if (dfs(adj, it, color, !col) == false)\n                    return false;\n            } else {\n                if (color[it] == col) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    bool isBipartite(vector<vector<int>>& adjj) {\n        int V = adjj.size();\n        vector<int> adj[V];\n        for (int i = 0; i < V; i++) {\n            for (int j = 0; j < adjj[i].size(); j++) {\n                adj[i].push_back(adjj[i][j]);\n            }\n        }\n        int colors[V];\n        for (int i = 0; i < V; i++)\n            colors[i] = -1;\n        for (int i = 0; i < V; i++) {\n            if (colors[i] == -1) {\n                if (dfs(adj, i, colors, 0) == false)\n                    return false;\n            }\n        }\n        return true;\n    }\n};\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"is-graph-bipartite","has_notes":false,"flag_type":1}