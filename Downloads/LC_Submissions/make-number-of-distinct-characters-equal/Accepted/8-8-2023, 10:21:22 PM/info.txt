{"id":1015838630,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1691513482,"status":10,"status_display":"Accepted","runtime":"85 ms","url":"/submissions/detail/1015838630/","is_pending":"Not Pending","title":"Make Number of Distinct Characters Equal","memory":"17.2 MB","code":"class Solution {\npublic:\n   bool isItPossible(string word1, string word2) {\n    unordered_map<char, int> mp1, mp2;\n    //add all chars to the map\n    for(char ch: word1) mp1[ch]++;\n    for(char ch: word2) mp2[ch]++;\n\n    for(int i=0; i < 26; i++){\n        for(int j=0; j < 26; j++){\n            char ch1 = i + 'a', ch2 = j + 'a';\n            if(mp1.count(ch1) && mp2.count(ch2)){\n                //remove one char from both to swap\n                if(--mp1[ch1] == 0) mp1.erase(ch1);\n                if(--mp2[ch2] == 0) mp2.erase(ch2);\n\n                //add the new char\n                mp1[ch2]++;\n                mp2[ch1]++;\n\n                //if distinct chars in both, return true\n                if(mp1.size() == mp2.size())\n                    return true;\n\n                //add back the removed chars, also remove the new added chars\n                if(--mp1[ch2] == 0) mp1.erase(ch2);\n                if(--mp2[ch1] == 0) mp2.erase(ch1);\n                mp1[ch1]++;\n                mp2[ch2]++;\n            }\n        }\n    }\n    return false;\n}\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"make-number-of-distinct-characters-equal","has_notes":false,"flag_type":1}