{"id":970863858,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1686722383,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/970863858/","is_pending":"Not Pending","title":"01 Matrix","memory":"N/A","code":"class Solution {\npublic:    \n    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {\n                 int m = mat.size();\n        int n= mat[0].size();\n         queue<pair<pair<int,int>,int>>q;\n     vector<vector<int>>ans(m,vector<int>(n,0));\n        vector<vector<int>>vis(m,vector<int>(n,0));\n        for(int i=0;i<m;i++){\n            for(int j=0;j<n;j++){\n             if(mat[i][j]==0){\n               q.push({{i,j},0});\n                 vis[i][j]=1;\n                }\n            }\n        }\n        int delrow[] = {-1, 0, +1, 0}; \n\t    int delcol[] = {0, +1, 0, -1}; \n        while(!q.empty()){\n             int row = q.front().first.first; \n\t        int col = q.front().first.second; \n\t        int steps = q.front().second; \n\t        q.pop(); \n\t        ans[row][col] = steps; \n              for(int i = 0;i<4;i++) {\n\t            int nrow = row + delrow[i]; \n\t            int ncol = col + delcol[i]; \n\t            // check for valid unvisited cell\n\t            if(nrow >= 0 && nrow < n && ncol >= 0 && ncol < m \n\t            && vis[nrow][ncol] == 0) {\n\t                vis[nrow][ncol] = 1; \n\t                q.push({{nrow, ncol}, steps+1});  \n\t            }\n\t        }\n        }\n        \n        \n       return ans;\n    }\n};","compare_result":"11000000000000000000000000000000000000000000000000","title_slug":"01-matrix","has_notes":false,"flag_type":1}