{"id":977602981,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1687498666,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/977602981/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"N/A","code":"class Solution {\npublic:\n    int fxn(int ind,int prevind,int n,vector<int>&nums){\n        if(ind ==n)return 0;\n        int take=0;\n            int ntake=0;\n        ntake= fxn(ind+1,prevind,n,nums);\n        if(prevind==-1||nums[ind]>nums[prevind]){\n            take= 1+fxn(ind+1,ind,n,nums);\n        }\n        return max(take,ntake);\n    }\n    \n    \n    int lengthOfLIS(vector<int>& nums) {\n        return fxn(0,-1,nums.size(),nums);\n    }\n};","compare_result":"111111111111111111111100000000000000000000000000000000","title_slug":"longest-increasing-subsequence","has_notes":false,"flag_type":1}