{"id":977637350,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1687502042,"status":10,"status_display":"Accepted","runtime":"306 ms","url":"/submissions/detail/977637350/","is_pending":"Not Pending","title":"Longest Increasing Subsequence","memory":"10.7 MB","code":"class Solution {\npublic:\n    int lengthOfLIS(vector<int>& nums) {\n        int n=nums.size();\n        vector<int>dp(n,1),hash(n);\n        int maxi=1;\n        for(int i=0;i<nums.size();i++){\n            for(int j=0;j<i;j++){\n                if(nums[j]<nums[i]){\n                    dp[i]=max(dp[i],1+dp[j]);\n                }\n            }\n       maxi=max(maxi,dp[i]); }\n        \n        return maxi;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111","title_slug":"longest-increasing-subsequence","has_notes":false,"flag_type":1}