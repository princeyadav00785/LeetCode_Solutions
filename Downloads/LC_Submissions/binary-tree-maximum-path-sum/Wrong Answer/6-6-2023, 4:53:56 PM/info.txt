{"id":965105048,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1686050636,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/965105048/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int fxn(TreeNode*root,int& maxi){\n        if(root==NULL){return 0;}\n        int l= max(0,fxn(root->left,maxi));\n            int r=max(0,fxn(root->right,maxi));\n        maxi= max(maxi,root->val+l+r);\n        return root->val+max(r,l);\n        \n        \n    }\n    int maxPathSum(TreeNode* root) {\n        int sum=0;\n        int ans= fxn(root,sum);\n        return sum;\n    }\n};","compare_result":"11110111001111011111111111111111111111111111111111111111111111111111111011111111011111111111111","title_slug":"binary-tree-maximum-path-sum","has_notes":false,"flag_type":1}