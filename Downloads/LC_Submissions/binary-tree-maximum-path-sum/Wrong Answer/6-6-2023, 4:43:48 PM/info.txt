{"id":965099555,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1686050028,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/965099555/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int fxn(TreeNode*root,int& sum){\n        if(root==NULL){\n            return 0;\n        }\n        int l=fxn(root->left,sum);\n        int r= fxn(root->right,sum);\n        sum=max(sum,root->val+l+r);\n        return root->val+max(r,l);\n    }\n    \n    int maxPathSum(TreeNode* root) {\n        \n        int sum=INT_MIN;\n      int ans=fxn(root,sum);\n        return sum;\n    }\n};","compare_result":"11111101100110110111110111111100110111000011001111010101001111111111011000111101111111011111111","title_slug":"binary-tree-maximum-path-sum","has_notes":false,"flag_type":1}