{"id":980641564,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1687850954,"status":10,"status_display":"Accepted","runtime":"313 ms","url":"/submissions/detail/980641564/","is_pending":"Not Pending","title":"Append K Integers With Minimal Sum","memory":"102.2 MB","code":"class Solution {\npublic:\n    long long minimalKSum(vector<int>& nums, int k) {\n        long long ans = (long(k)*(long(k+1)))/2;        \n        set<int>st(nums.begin(),nums.end());    // use unique numbers from nums\n        for(auto i:st){            \n            if(i<=k)    ans += (1+ k++) - i;    // if a number was added that already existed in nums, remove that and add next number (k+1)\n            else    break;\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"append-k-integers-with-minimal-sum","has_notes":false,"flag_type":1}