{"id":1024665996,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1692345281,"status":10,"status_display":"Accepted","runtime":"122 ms","url":"/submissions/detail/1024665996/","is_pending":"Not Pending","title":"Maximal Network Rank","memory":"45.2 MB","code":"class Solution {\npublic:\n    #define p1 pair <int,int> \n    int maximalNetworkRank(int n, vector<vector<int>>& roads) {\n        vector<int>degree(n,0);\n        set<p1> s;\n        for(auto x:roads){\n            degree[x[0]]++;\n            degree[x[1]]++;\n        }\n        for(auto x:roads){\n            s.insert({x[0],x[1]});\n             s.insert({x[1],x[0]});\n            \n        }\n        int mxm=0;\n        for(int i=0;i<n;i++){\n         for(int j=i+1;j<n;j++){\n             int cnt= degree[i]+degree[j];\n             if(s.find({i,j})!=s.end()){\n                 cnt--;\n             }\n             mxm=max(cnt,mxm);\n         }}\n        return mxm;\n    }\n};\n\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximal-network-rank","has_notes":false,"flag_type":1}