{"id":1013519467,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1691296483,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1013519467/","is_pending":"Not Pending","title":"Possible Bipartition","memory":"N/A","code":"class Solution {\npublic:\n    bool possibleBipartition(int n, vector<vector<int>>& nums) {\n        vector<int>v(n+1,0);\n      for(int i=0;i<nums.size();i++){\n          if(v[nums[i][0]]==0&&v[nums[i][1]]==0){\n              v[nums[i][0]]= 0;\n              v[nums[i][1]]=1;\n          }else{\n              if(v[nums[i][0]]==v[nums[i][1]]){\n                  return false;\n              }else{\n                    v[nums[i][0]]= 0;\n              v[nums[i][1]]=1;\n              }\n          }\n      }\n\n      return true;\n    }\n};","compare_result":"11011110001101110111010101010101010101010101010101010101010101010101011100","title_slug":"possible-bipartition","has_notes":false,"flag_type":1}