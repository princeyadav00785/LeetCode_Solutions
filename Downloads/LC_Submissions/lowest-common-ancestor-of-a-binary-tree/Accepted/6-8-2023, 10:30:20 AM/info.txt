{"id":966355426,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1686200420,"status":10,"status_display":"Accepted","runtime":"26 ms","url":"/submissions/detail/966355426/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"14.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* fxn (TreeNode* root, TreeNode* p, TreeNode* q){\n        \n        // if(root->val>p->val&&root->val>q->val){\n        //     fxn(root->right,p,q);\n        // }else  if(root->val<p->val&&root->val<q->val){\n        //     fxn(root->left,p,q);\n        // }\n        // else return root;\n        // return root;\n        if(root==NULL||root==p||root==q){\n            return root;\n        }\n        TreeNode* lt = fxn(root->left,p,q);\n            TreeNode* rt=fxn(root->right,p,q);\n        if(lt==NULL){return rt;}\n        else if(rt==NULL)return lt;\n        else return root;\n    }\n    \n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n       return  fxn(root,p,q);\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false,"flag_type":1}