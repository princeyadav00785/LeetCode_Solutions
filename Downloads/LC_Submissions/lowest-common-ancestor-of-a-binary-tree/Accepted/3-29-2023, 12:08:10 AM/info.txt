{"id":923806206,"lang":"cpp","lang_name":"C++","time":"7 months, 3 weeks","timestamp":1680028690,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/923806206/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"14.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n     TreeNode* fxn(TreeNode* root, TreeNode* p, TreeNode* q){\n         if(root==NULL||root->val==p->val||root->val==q->val){\n             return root;\n         }\n         \n         TreeNode* let= fxn(root->left,p,q);\n          TreeNode* rigt= fxn(root->right,p,q);\n         \n         if(let==NULL){\n             return rigt;\n         }\n         else if(rigt==NULL){\n             return let;\n         }else return root;\n         \n     }\n    \n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        TreeNode* ans= fxn(root,p,q);\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false,"flag_type":1}