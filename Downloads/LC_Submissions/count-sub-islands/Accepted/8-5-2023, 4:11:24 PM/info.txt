{"id":1012785907,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1691232084,"status":10,"status_display":"Accepted","runtime":"245 ms","url":"/submissions/detail/1012785907/","is_pending":"Not Pending","title":"Count Sub Islands","memory":"90.3 MB","code":"class Solution {\npublic:\n      void dfs(vector<vector<int>>& grid1, vector<vector<int>>& grid2, int x, int y, int &res) {\n        int m = grid1.size(), n = grid1[0].size();\n        if(x < 0 || y < 0 || x >= m || y >= n) return;\n        if(grid1[x][y] == 0 && grid2[x][y] == 1) {\n            res = false;\n        }\n        if(grid2[x][y] == 0) return;\n        grid2[x][y] = 0;\n        dfs(grid1, grid2, x + 1, y, res);\n        dfs(grid1, grid2, x, y + 1, res);\n        dfs(grid1, grid2, x - 1, y, res);\n        dfs(grid1, grid2, x, y - 1, res);\n    }\n    int countSubIslands(vector<vector<int>>& grid1, vector<vector<int>>& grid2) {\n        int m = grid1.size(), n = grid1[0].size();\n        int ans = 0;\n        for(int i = 0; i < m ; i++) {\n            for(int j = 0; j < n; j++) {\n                if(grid2[i][j] == 1) {\n                    int res = true;\n                    dfs(grid1, grid2, i, j, res);\n                    ans += res;\n                }\n            }\n        }\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"count-sub-islands","has_notes":false,"flag_type":1}