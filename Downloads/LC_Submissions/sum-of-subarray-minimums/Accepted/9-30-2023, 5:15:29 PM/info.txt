{"id":1062998347,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1696074329,"status":10,"status_display":"Accepted","runtime":"78 ms","url":"/submissions/detail/1062998347/","is_pending":"Not Pending","title":"Sum of Subarray Minimums","memory":"44.3 MB","code":"class Solution {\npublic:\n  int sumSubarrayMins(vector<int>& A) {\n    stack<pair<int, int>> in_stk_p, in_stk_n;\n\n    vector<int> left(A.size()), right(A.size());\n\n    for(int i = 0; i < A.size(); i++) left[i] =  i + 1;\n    for(int i = 0; i < A.size(); i++) right[i] = A.size() - i;\n\t\t\n    for(int i = 0; i < A.size(); i++){\n\n      while(!in_stk_p.empty() && in_stk_p.top().first > A[i]) in_stk_p.pop();\n      left[i] = in_stk_p.empty()? i + 1: i - in_stk_p.top().second;\n      in_stk_p.push({A[i],i});\n\t\t\t\n\n      while(!in_stk_n.empty() && in_stk_n.top().first > A[i]){\n        auto x = in_stk_n.top();in_stk_n.pop();\n        right[x.second] = i - x.second;\n      }\n      in_stk_n.push({A[i], i});\n    }\n\n   long long  int ans = 0, mod = 1e9 +7;\n    for(int i = 0; i < A.size(); i++){\n      ans = (ans + 1ll*A[i]*left[i]*right[i])%mod;\n    }\n    return ans;\n  }\n};\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-subarray-minimums","has_notes":false,"flag_type":1}