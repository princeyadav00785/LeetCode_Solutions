{"id":1046677291,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1694449905,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1046677291/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool fxn(TreeNode*root , int lower,int upper)\n    {\n        if(root==NULL)return true;\n        if(root->val>upper||root->val<lower)return false;\n        return fxn(root->right,root->val,upper)&&fxn(root->left,lower,root->val);\n        \n        \n    }    \n    \n    bool isValidBST(TreeNode* root) {\n        return  fxn(root,INT_MIN,INT_MAX);\n    }\n};","compare_result":"11110001101111111101111111111111111111111011111111111111110111100001111111111100111","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}