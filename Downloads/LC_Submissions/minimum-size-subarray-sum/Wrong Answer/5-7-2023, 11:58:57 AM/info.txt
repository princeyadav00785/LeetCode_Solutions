{"id":945908034,"lang":"cpp","lang_name":"C++","time":"6 months, 1 week","timestamp":1683440937,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/945908034/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"N/A","code":"class Solution {\npublic:\n    int minSubArrayLen(int target, vector<int>& nums) {\n        sort(nums.begin(),nums.end());\n        int cnt=0,sum=0;\n        for(int i=nums.size()-1;i>-1;i--){\n            sum+=nums[i];cnt++;\n            if(sum>=target) break;\n        }\n        // return cnt;\n        if(cnt==nums.size()&&sum<target){\n            return 0;\n        }else return cnt;\n    }\n};","compare_result":"11111111011111111001","title_slug":"minimum-size-subarray-sum","has_notes":false,"flag_type":1}