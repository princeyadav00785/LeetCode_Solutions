{"id":964921829,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1686031575,"status":10,"status_display":"Accepted","runtime":"259 ms","url":"/submissions/detail/964921829/","is_pending":"Not Pending","title":"All Elements in Two Binary Search Trees","memory":"86.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n     void inorder(TreeNode*root,vector<int>&v){\n         if(root==NULL){return;}\n         inorder(root->left,v);\n         v.push_back(root->val);\n         inorder(root->right,v);\n         \n     }\n    vector<int> getAllElements(TreeNode* r1, TreeNode* r2) {\n        vector<int>a;\n        vector<int>b;\n        vector<int>c;\n        \n        inorder(r1,a);\n        inorder(r2,b);\n        for(int i=0;i<a.size();i++){\n            c.push_back(a[i]);\n            cout<<a[i]<<\" \";\n        }\n          for(int i=0;i<b.size();i++){\n            c.push_back(b[i]);\n        }\n        sort(c.begin(),c.end());\n        return c;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"all-elements-in-two-binary-search-trees","has_notes":false,"flag_type":1}