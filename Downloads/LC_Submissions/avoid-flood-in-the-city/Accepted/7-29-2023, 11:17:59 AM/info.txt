{"id":1006646978,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1690609679,"status":10,"status_display":"Accepted","runtime":"226 ms","url":"/submissions/detail/1006646978/","is_pending":"Not Pending","title":"Avoid Flood in The City","memory":"112.7 MB","code":"class Solution {\npublic:\n    vector<int> avoidFlood(vector<int>& rains) {\n        unordered_map<int,int> mp;\n        int n = rains.size();\n        vector<int> ans;\n        set<int> st;\n        \n        for(int i = 0 ; i < n ; i++) {\n            \n            if(rains[i] == 0) {\n                st.insert(i);\n                ans.push_back(1);\n            }\n            else \n            {\n                if(mp.find(rains[i]) != mp.end()) {\n                int x = rains[i];\n                auto it = st.lower_bound(mp[x]);\n                \n                //cout<<x<<\" \"<<*it<<\" \";\n                    \n                if(it == st.end())\n                    return {};\n                \n                ans[*it] = rains[i];\n                st.erase(*it);\n            }\n                mp[rains[i]] = i;\n                ans.push_back(-1);\n        }\n    }   \n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"avoid-flood-in-the-city","has_notes":false,"flag_type":1}