{"id":923798373,"lang":"cpp","lang_name":"C++","time":"7 months, 3 weeks","timestamp":1680027918,"status":10,"status_display":"Accepted","runtime":"38 ms","url":"/submissions/detail/923798373/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Search Tree","memory":"23.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\n\nclass Solution {\npublic:\n      TreeNode* fxn(TreeNode* root,TreeNode*p,TreeNode*q){\n          if(root==NULL){\n              return root;\n          }\n          if(root->val>p->val&&root->val<q->val){\n              return root;\n          }\n          fxn(root->left,p,q);\n          fxn(root->left,p,q);\n          return root;\n      }\n    \n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        // return fxn(root,p,q);\n         if (root == NULL || p->val == root->val || q->val == root->val)\n            return root;\n        if (p->val < root->val && q->val < root->val)\n                return lowestCommonAncestor(root->left, p, q);\n        if (p->val > root->val && q->val > root->val)\n                return lowestCommonAncestor(root->right, p, q); \n        return root;\n    }\n};","compare_result":"111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-search-tree","has_notes":false,"flag_type":1}