{"id":964841984,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1686023412,"status":10,"status_display":"Accepted","runtime":"324 ms","url":"/submissions/detail/964841984/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"144.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int minDepth(TreeNode* root) {\n        if(root==NULL){\n            return 0;\n        }\n        int l= minDepth(root->left);\n        int r= minDepth(root->right);\n        \n       if(l==0&&r!=0){return 1+r;}\n        else if(r==0&&l!=0){return 1+l;}\n        else return 1+min(l,r);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"minimum-depth-of-binary-tree","has_notes":false,"flag_type":1}