{"id":933466471,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1681452983,"status":10,"status_display":"Accepted","runtime":"137 ms","url":"/submissions/detail/933466471/","is_pending":"Not Pending","title":"Longest Palindromic Subsequence","memory":"10.9 MB","code":"class Solution {\npublic:\n    int dp[1001][1001];\n    int lcs(string s,string t,int n){\n        for(int i=0;i<n+1;i++){\n            for(int j=0;j<n+1;j++){\n                if(i==0||j==0){\n                  dp[i][j]=0;  \n                }\n                else {\n                    if(s[i-1]==t[j-1]){\n                        dp[i][j]= 1+dp[i-1][j-1];\n                    }else{\n                        dp[i][j]=max(dp[i-1][j],dp[i][j-1]);\n                    }\n                }\n            }\n        }\n        return dp[n][n];\n    }\n    int longestPalindromeSubseq(string s) {\n        string t= s;\n        reverse(t.begin(),t.end());\n        \n         return lcs(s,t,s.length());\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-subsequence","has_notes":false,"flag_type":1}