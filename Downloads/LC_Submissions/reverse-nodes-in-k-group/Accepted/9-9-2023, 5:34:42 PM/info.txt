{"id":1044685612,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1694261082,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1044685612/","is_pending":"Not Pending","title":"Reverse Nodes in k-Group","memory":"11.4 MB","code":"class Solution {\n// Reverse the node.\n    ListNode * reverse(ListNode * ptr, int &k, int size)\n    {\n        if(size < k) return ptr;\n        if(ptr == NULL) return ptr;\n\n        ListNode * cur = ptr, *temp = NULL, *pre = NULL;\n        int cnt = 0;\n        while(cur!=NULL && cnt < k)\n        {\n            temp = cur->next;\n            cur->next = pre;\n            pre = cur;\n            cur = temp;\n            cnt++;\n        }\n\n        ptr->next = reverse(temp,k,size-k);\n        return pre;\n    }\n\n// Find the length of the Linked List.\n    int func(ListNode * ptr)\n    {\n        int len = 0;\n        while(ptr)\n        {\n            len++;\n            ptr = ptr->next;\n        }\n        return len;\n    }\npublic:\n    ListNode* reverseKGroup(ListNode* head, int k) {\n        int n = func(head);\n        return reverse(head,k,n);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"reverse-nodes-in-k-group","has_notes":false,"flag_type":1}