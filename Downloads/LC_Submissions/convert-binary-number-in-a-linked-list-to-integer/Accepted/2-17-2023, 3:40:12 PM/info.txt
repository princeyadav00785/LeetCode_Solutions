{"id":899686943,"lang":"cpp","lang_name":"C++","time":"9Â months","timestamp":1676628612,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/899686943/","is_pending":"Not Pending","title":"Convert Binary Number in a Linked List to Integer","memory":"8.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    int getDecimalValue(ListNode* head) {\n        vector<int> v;\n        ListNode* temp =head;\n        while(temp!=NULL){\n            v.push_back(temp->val);\n            temp = temp->next;\n        }\n        int ans =0;\n        \n        int n=v.size()-1;\n        for(int i=0;i<v.size();i++){\n            ans += v[i]*pow(2,n);\n            n--;\n\n        }\n       \n        if(head==NULL){\n            return 0;\n        }else return ans;\n\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"convert-binary-number-in-a-linked-list-to-integer","has_notes":false,"flag_type":1}