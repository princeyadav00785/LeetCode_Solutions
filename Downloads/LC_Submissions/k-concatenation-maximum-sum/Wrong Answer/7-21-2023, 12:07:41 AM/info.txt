{"id":999603326,"lang":"java","lang_name":"Java","time":"3 months, 4 weeks","timestamp":1689878261,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/999603326/","is_pending":"Not Pending","title":"K-Concatenation Maximum Sum","memory":"N/A","code":"class Solution {\n     int mod  = (int) Math.pow(10,9)+7;\n    public int kConcatenationMaxSum(int[] ar, int k) {\n        long kadanes= kadanesAlgo(ar);\n        if(k==1){\n            return (int)kadanes;\n        }\n        long prefixSum= prefixSum(ar);\n        long suffixSum=suffixSum(ar);\n        long sum=0;\n        for (int i1 : ar) {\n            sum += i1;\n        }\n        if(sum>0){\n            return (int)(Math.max(((sum*(k-2))%mod+suffixSum%mod+prefixSum%mod)%mod,kadanes%mod));\n        }\n        else{\n            return (int)(Math.max((prefixSum%mod+suffixSum%mod)%mod,kadanes%mod));\n        }\n\n    }\n    public  long kadanesAlgo(int[] ar){\n\n        long currentSum=0;\n        long maxSum=Integer.MIN_VALUE;\n        for(int i=0;i<ar.length;i++){\n            currentSum=currentSum>0?(currentSum+ar[i])%mod:ar[i];\n            maxSum=Math.max(currentSum,maxSum);\n        }\n        return maxSum<0?0:maxSum%mod;\n\n    }\n\n\n    public  long prefixSum(int[] ar){\n\n        long currentSum=0;\n        long maxSum=Integer.MIN_VALUE;\n        for(int i=0;i<ar.length;i++){\n            currentSum= (currentSum+ar[i])%mod;\n            maxSum=Math.max(maxSum,currentSum);\n        }\n        return maxSum;\n\n\n    }\n\n    public  long suffixSum(int[] ar){\n\n\n        long currentSum=0;\n        long maxSum=Integer.MIN_VALUE;\n        for(int i=ar.length-1;i>=0;i--){\n            currentSum=(currentSum+ar[i])%mod;\n            maxSum=Math.max(currentSum,maxSum);\n        }\n        return maxSum;\n\n    }}","compare_result":"1111111111111111111111111111111111111111101","title_slug":"k-concatenation-maximum-sum","has_notes":false,"flag_type":1}