{"id":1046524094,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1694438256,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1046524094/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"18.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxDepth(TreeNode* root) {\n        // if(root==NULL){\n        //     return 0;\n        // }\n        // int lft= maxDepth(root->left);\n        // int rght= maxDepth(root->right);\n        // return  1+max(lft,rght);\n        \n        \n        \n        if(root==NULL){\n            return 0;\n        }\n        else {return 1+ max(maxDepth(root->left),maxDepth(root->right));}\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-depth-of-binary-tree","has_notes":false,"flag_type":1}