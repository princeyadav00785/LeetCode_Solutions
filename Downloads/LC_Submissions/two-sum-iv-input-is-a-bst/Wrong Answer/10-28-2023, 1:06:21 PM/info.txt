{"id":1085881940,"lang":"cpp","lang_name":"C++","time":"2 weeks, 5 days","timestamp":1698478581,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1085881940/","is_pending":"Not Pending","title":"Two Sum IV - Input is a BST","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int>v;\n    void traversal(TreeNode* root){\n        if(!root)return;\n        v.push_back(root->val);\n        if(root->right)traversal(root->right);\n        if(root->left)traversal(root->left);\n    }\n    bool findTarget(TreeNode* root, int k) {\n        traversal(root);\n        map<int,int>mp;\n        for(int i=0;i<v.size();i++){\n            mp[v[i]]++;\n        }\n        for(auto x:mp){\n            if(mp.find(k-x.first)!=mp.end())return true;\n            \n        }\n        return false;\n    }\n};","compare_result":"111111011111111111111111111011101111101111111011111111011011111111110011111010111111111111111111111111111111111111111111111111111111111011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111101111111111111111111111111111111111111011111111111111111110","title_slug":"two-sum-iv-input-is-a-bst","has_notes":false,"flag_type":1}