{"id":947004872,"lang":"cpp","lang_name":"C++","time":"6 months, 1 week","timestamp":1683603986,"status":10,"status_display":"Accepted","runtime":"101 ms","url":"/submissions/detail/947004872/","is_pending":"Not Pending","title":"Minimum Insertion Steps to Make a String Palindrome","memory":"28.7 MB","code":"class Solution {\npublic:\nint lcs(string s , string t,int n){\nvector<vector<int>> dp(n+1,vector<int>(n+1,0));\n\nfor(int i=1;i<=n;i++){\n    for(int j=1;j<=n;j++){\n        if(s[i-1]==t[j-1]){\n            dp[i][j]=1+dp[i-1][j-1];\n        }else {\n            dp[i][j]=max(dp[i-1][j],dp[i][j-1]);\n        }\n    }\n  \n}\n\n  return dp[n][n];\n}\n    int minInsertions(string s) {\n    string t= s;\n    reverse(s.begin(),s.end());\n    int siz= lcs(s,t,s.length());\n    return s.length()-siz;    \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-insertion-steps-to-make-a-string-palindrome","has_notes":false,"flag_type":1}