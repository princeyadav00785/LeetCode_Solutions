{"id":979516081,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1687719575,"status":10,"status_display":"Accepted","runtime":"61 ms","url":"/submissions/detail/979516081/","is_pending":"Not Pending","title":"Count Anagrams","memory":"12.8 MB","code":"class Solution {\npublic:\n    int countAnagrams(string s) {\n        const int mod = 1e9 + 7;\n        long long ans = 1;\n        int n = s.length();\n        int totalChars = 0;\n        unordered_map<char, int> freqMap;\n\n        for (int i = 0; i < n; i++) {\n            if (s[i] == ' ' || i == n - 1) {\n                if (i == n - 1) {\n                    freqMap[s[i]]++;\n                    totalChars++;\n                }\n\n                long long t = 1;\n                for (auto x : freqMap) {\n                    t = (t * factorial(x.second, mod)) % mod;\n                }\n                ans = (ans * factorial(totalChars, mod)) % mod;\n                ans = (ans * modularInverse(t, mod)) % mod;\n\n                totalChars = 0;\n                freqMap.clear();\n            } else {\n                freqMap[s[i]]++;\n                totalChars++;\n            }\n        }\n\n        return ans;\n    }\n\nprivate:\n    int factorial(int n, int mod) {\n        long long fact = 1;\n        for (int i = 2; i <= n; i++) {\n            fact = (fact * i) % mod;\n        }\n        return fact;\n    }\n\n    int modularInverse(long long int a, int mod) {\n        int b = mod - 2;\n        int result = 1;\n\n        while (b > 0) {\n            if (b & 1) {\n                result = (result * a) % mod;\n            }\n            a = (a * a) % mod;\n            b >>= 1;\n        }\n\n        return result;\n    }\n};\n","compare_result":"11111111111111111111111111111111111111111","title_slug":"count-anagrams","has_notes":false,"flag_type":1}