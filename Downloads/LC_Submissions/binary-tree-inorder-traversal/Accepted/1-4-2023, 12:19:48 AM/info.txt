{"id":870652180,"lang":"cpp","lang_name":"C++","time":"10 months, 2 weeks","timestamp":1672771788,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/870652180/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"8.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    public: void traversal(TreeNode* root , vector<int>& x){\n        \n        if(root==NULL){\n            return ;\n        }\n                  traversal(root->left ,x);\n                 x.push_back(root->val);\n                  traversal(root->right ,x);\n         \n    }\npublic:\n    vector<int> inorderTraversal(TreeNode* root) {\n        vector<int> v;\n        traversal(root , v);\n        \n        return v;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal","has_notes":false,"flag_type":1}