{"id":947256610,"lang":"cpp","lang_name":"C++","time":"6 months, 1 week","timestamp":1683640122,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/947256610/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"6.9 MB","code":"class Solution {\npublic:\n    vector<int> spiralOrder(vector<vector<int>>& matrix) {\n         vector<int> result;\n        if (matrix.empty() || matrix[0].empty()) {\n            return result;\n        }\n        \n        int rows = matrix.size(), cols = matrix[0].size();\n        int left = 0, right = cols-1, top = 0, bottom = rows-1;\n        \n        while (left <= right && top <= bottom) {\n            for (int i = left; i <= right; i++) {\n                result.push_back(matrix[top][i]);\n            }\n            top++;\n            \n            for (int i = top; i <= bottom; i++) {\n                result.push_back(matrix[i][right]);\n            }\n            right--;\n            \n            if (top <= bottom) {\n                for (int i = right; i >= left; i--) {\n                    result.push_back(matrix[bottom][i]);\n                }\n                bottom--;\n            }\n            \n            if (left <= right) {\n                for (int i = bottom; i >= top; i--) {\n                    result.push_back(matrix[i][left]);\n                }\n                left++;\n            }\n        }\n        \n        return result;\n    }\n};","compare_result":"11111111111111111111111","title_slug":"spiral-matrix","has_notes":false,"flag_type":1}