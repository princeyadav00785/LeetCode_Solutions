{"id":1038557472,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1693667095,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1038557472/","is_pending":"Not Pending","title":"Maximum Sum of Almost Unique Subarray","memory":"N/A","code":"class Solution {\npublic:\n    long long maxSum(vector<int>& nums, int m, int k) {\n        int n = nums.size(); \n    int max_sum = 0; \n \n    for (int i = 0; i <= n - k; i++) { \n        vector<int> subarray(nums.begin() + i, nums.begin() + i + k); \n        unordered_set<int> distinct_elements(subarray.begin(), subarray.end()); \n \n        if (distinct_elements.size() >= m) { \n            int subarray_sum = 0; \n            for (int num : subarray) { \n                subarray_sum += num; \n            } \n            max_sum = max(max_sum, subarray_sum); \n        } \n    } \n        return max_sum;\n    }\n};","compare_resulttitle_slug":"maximum-sum-of-almost-unique-subarray","has_notes":false,"flag_type":1}