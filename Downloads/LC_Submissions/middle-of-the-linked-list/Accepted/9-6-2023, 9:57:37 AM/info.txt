{"id":1041799960,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1693974457,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1041799960/","is_pending":"Not Pending","title":"Middle of the Linked List","memory":"7.1 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* middleNode(ListNode* head) {\n        ListNode* slow=head;\n        ListNode* fast = head;\n        while(fast&&fast->next){\n            slow=slow->next;\n            fast=fast->next->next;\n        }\n        return slow;\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"middle-of-the-linked-list","has_notes":false,"flag_type":1}