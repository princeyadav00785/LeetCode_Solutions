{"id":902055421,"lang":"cpp","lang_name":"C++","time":"8 months, 4 weeks","timestamp":1676959642,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/902055421/","is_pending":"Not Pending","title":"Middle of the Linked List","memory":"7.2 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* middleNode(ListNode* head) {\n        ListNode* slow=head;\n        ListNode* fast = head;\n        if(slow ==NULL|| fast ==NULL){return NULL;}\n//         1  2  3 4 5 6 NULL\n//        sh \n//            s  f\n//               s   f\n//                 s     f\n        while( fast!=NULL|| ( fast!=NULL&& fast->next!=NULL)){\n            if(fast==NULL||fast->next ==NULL){\n                return slow;\n            }\n            slow =slow->next;\n            fast = fast->next->next;\n        }\n        return slow;\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"middle-of-the-linked-list","has_notes":false,"flag_type":1}