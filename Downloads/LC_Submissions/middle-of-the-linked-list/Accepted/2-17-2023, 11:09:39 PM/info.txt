{"id":899890270,"lang":"cpp","lang_name":"C++","time":"9Â months","timestamp":1676655579,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/899890270/","is_pending":"Not Pending","title":"Middle of the Linked List","memory":"7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* middleNode(ListNode* head) {\n     ListNode* temp=head;\n     int cnt=0;\n     while(temp !=NULL){\n         temp = temp->next;\n         cnt++;\n     }   \n     cout<<cnt;\n      if(cnt%2==0){\n          cnt=cnt/2;\n      }else cnt= cnt/2;\n        ListNode* temp2=head;\n        while(cnt--){\n            temp2=temp2->next;\n        }\n        return temp2;\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"middle-of-the-linked-list","has_notes":false,"flag_type":1}