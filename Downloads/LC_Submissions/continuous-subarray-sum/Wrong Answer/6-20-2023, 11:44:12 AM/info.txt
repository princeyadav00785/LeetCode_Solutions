{"id":975322408,"lang":"cpp","lang_name":"C++","time":"4 months, 4 weeks","timestamp":1687241652,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/975322408/","is_pending":"Not Pending","title":"Continuous Subarray Sum","memory":"N/A","code":"class Solution {\npublic:\n    bool checkSubarraySum(vector<int>& nums, int k) {\n        //   unordered_map<int,int> mp;\n        // int sum=0,ans=0;\n        // mp[sum] = 1;\n        // for(auto it:nums){\n        //     sum += it;\n        //     int md= sum%k;\n        //     int find = md;\n        //     if(mp.find(find) != mp.end()){\n        //         ans += mp[find];\n        //     }\n        //     mp[md]++;\n        // }\n        // return ans;\n          int n=nums.size(), pretemp=0, sum=0;\n        map<int,int> mods;\n        for (int i=0; i<n; i++){\n            sum = (sum + nums[i]) % k;  // [edited]\n            if (mods[sum]) return true;\n            mods[sum] ++;\n            pretemp = sum;\n        }\n        return false;\n    }\n};","compare_result":"11111010111111111010001001010111111011111111111111111111111111111111111111111111111111111111110110","title_slug":"continuous-subarray-sum","has_notes":false,"flag_type":1}