{"id":983171240,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1688140984,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/983171240/","is_pending":"Not Pending","title":"Palindrome Partitioning IV","memory":"N/A","code":"class Solution {\npublic:\n\n bool isPalindrome (string & s, int i, int j){\n        while(i<j){\n            if(s[i]!=s[j]) return false;\n            i++; j--;\n        }\n        return true;\n    }\n    \n\n    int solve (string & s, int i, int j, vector<int> & dp,vector<int>&store){    \n        if(i>=j or isPalindrome(s, i, j)) return 0;\n        if(dp[i]!=-1) return dp[i];\n        int ans = INT_MAX;\n        for(int k=i; k<j; k++){           \n            if(isPalindrome(s, i, k)){                         \n                int temp = solve (s, k+1, j, dp,store) + 1;\n                store.push_back(temp);\n                ans = min (ans, temp);\n            }\n        }\n        return dp[i] = ans;\n    }\n    \n       bool checkPartitioning(string s) {\n       int n = s.length();        \n        vector<int> dp (n+1, -1);   \n           vector<int > store;\n        int mnm = solve (s, 0, n-1, dp,store); \n           if(mnm>2)return false;\n         for(int i=0;i<store.size();i++){\n             if(store[i]==2)return true;\n         }\n           return false;\n    }\n};","compare_result":"1111101111111111111111111111111111111111111111111111111111111111111111111111110011011111100","title_slug":"palindrome-partitioning-iv","has_notes":false,"flag_type":1}