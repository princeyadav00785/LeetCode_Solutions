{"id":1084547788,"lang":"cpp","lang_name":"C++","time":"3Â weeks","timestamp":1698319126,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1084547788/","is_pending":"Not Pending","title":"Maximum Width of Binary Tree","memory":"N/A","code":"class Solution {\npublic:\n    int widthOfBinaryTree(TreeNode* root) {\n        if (!root)\n            return 0;\n\n//         queue<pair<TreeNode*, unsigned long long>> q;\n//         q.push({root, 1});\n//         int maxWidth = 1;\n\n//         while (!q.empty()) {\n//             int size = q.size();\n//             unsigned long long leftmost = q.front().second;\n\n//             for (int i = 0; i < size; i++) {\n//                 auto nodePair = q.front();\n//                 TreeNode* node = nodePair.first;\n//                 unsigned long long position = nodePair.second;\n//                 q.pop();\n\n//                 if (node->left) {\n//                     q.push({node->left, 2 * position});\n//                 }\n\n//                 if (node->right) {\n//                     q.push({node->right, 2 * position + 1});\n//                 }\n\n//                 maxWidth = max(maxWidth, static_cast<int>(position - leftmost + 1));\n//             }\n//         }\n\n//         return maxWidth;\n        int ans=1;\n        queue<pair<TreeNode*, long long int>>q;\n        q.push({root,1});\n        while(!q.empty()){\n              int n=q.size();\n            int left=q.front().second; \n            for(int i=0;i<n;i++){\n                TreeNode* a= q.front().first;\n                int pos=q.front().second;\n                q.pop();\n                if(a->left)q.push({a->left,1ll*2*pos});\n                if(a->right)q.push({a->right,1ll*2*pos+1});\n                ans=max(ans,pos-left+1);\n            }\n        }\n        return ans;\n    }\n};\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000","title_slug":"maximum-width-of-binary-tree","has_notes":false,"flag_type":1}