{"id":984618126,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1688310267,"status":10,"status_display":"Accepted","runtime":"102 ms","url":"/submissions/detail/984618126/","is_pending":"Not Pending","title":"Minimum Cost to Cut a Stick","memory":"10.2 MB","code":"class Solution {\npublic:\n    int fxn(int i,int j,vector<int>&cuts,vector<vector<int>>&dp){\n        if(i>j)return 0;\n        if(dp[i][j]!=-1)return dp[i][j];\n        int mnm=INT_MAX;\n        for(int k=i;k<=j;k++){\n            int temp=  cuts[j+1]-cuts[i-1]+fxn(i,k-1,cuts,dp)+fxn(k+1,j,cuts,dp);\n            mnm= min(mnm,temp);\n            }\n        return dp[i][j] =mnm;\n    }\n    \n    \n    int minCost(int n, vector<int>& cuts) {\n                  int i=0,j=cuts.size();  \n        vector<vector<int>>dp(j+1,vector<int>(j+1,-1));\n        cuts.push_back(n);\n        cuts.insert(cuts.begin(),0);\n        sort(cuts.begin(),cuts.end());\n    \n      return   fxn(i+1,j,cuts,dp);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-cost-to-cut-a-stick","has_notes":false,"flag_type":1}