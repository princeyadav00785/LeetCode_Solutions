{"id":971932396,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1686838840,"status":10,"status_display":"Accepted","runtime":"258 ms","url":"/submissions/detail/971932396/","is_pending":"Not Pending","title":"Kth Largest Sum in a Binary Tree","memory":"109.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    long long kthLargestLevelSum(TreeNode* root, int k) {\n        vector<long long >ans;\n        queue<TreeNode*> q;\n        // if(root==NULL){return ans;}\n        q.push(root);\n        while(q.size()){\n            vector<long long > v;\n            int n= q.size();\n            for(int i=0;i<n;i++){\n                 TreeNode* a= q.front();\n                q.pop();\n                if(a!=NULL){ \n                if(a->left) q.push(a->left);\n                   if(a->right) q.push(a->right);\n                v.push_back(a->val);} \n            }\n            long long s=0;\n            for(int i=0;i<v.size();i++){\n                s+=1ll*(v[i]);\n            }\n              ans.push_back(s);   \n        }\n        if(k>ans.size())return -1;\n        else {\n\n            sort(ans.begin(),ans.end(),greater<long long >());\n            //             for(auto x:ans){\n            //     cout<<x<<\" \"<<endl;\n            // }\n            return ans[k-1];\n        }\n    }\n};","compare_result":"111111111111111111111111111111111111111111111","title_slug":"kth-largest-sum-in-a-binary-tree","has_notes":false,"flag_type":1}