{"id":982279594,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1688036188,"status":10,"status_display":"Accepted","runtime":"52 ms","url":"/submissions/detail/982279594/","is_pending":"Not Pending","title":"Minimum Deletions to Make Character Frequencies Unique","memory":"17.2 MB","code":"#include <string>\n#include <unordered_set>\n#include <vector>\n\nclass Solution {\npublic:\n    int minDeletions(string s) {\n        vector<int> charCount(26, 0);\n\n        for (char ch : s) {\n            charCount[ch - 'a']++;\n        }\n\n        unordered_set<int> set;\n        int deletion = 0;\n\n        for (int val : charCount) {\n            while (val != 0 && set.count(val)) {\n                val--;\n                deletion++;\n            }\n            set.insert(val);\n        }\n\n        return deletion;\n    }\n};\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-deletions-to-make-character-frequencies-unique","has_notes":false,"flag_type":1}