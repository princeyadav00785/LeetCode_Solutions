{"id":965172965,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1686058114,"status":10,"status_display":"Accepted","runtime":"179 ms","url":"/submissions/detail/965172965/","is_pending":"Not Pending","title":"Sum of Beauty in the Array","memory":"85.2 MB","code":"class Solution {\npublic:\n    int sumOfBeauties(vector<int>& nums) { \n     int n = nums.size();\n    vector<int> minOnRight(n, 0);\n    minOnRight[n - 1] = nums[n - 1];\n    \n    // loop for maintaing values of minimum on the right\n    for(int i = n - 2; i >= 2; i--){\n        //minimum is either the number itself or the minimum that is on right of this element we are traversing\n        minOnRight[i] = min(minOnRight[i + 1], nums[i]);           \n    }\n        \n    int maxOnLeft = nums[0];\n    int ans = 0;\n    for(int i = 1; i < n - 1; i++){\n        if(nums[i] > maxOnLeft && nums[i] < minOnRight[i + 1]) ans += 2;\n        else if(nums[i] > nums[i - 1] && nums[i] < nums[i + 1]) ans += 1;\n        maxOnLeft = max(nums[i], maxOnLeft);\n    }\n        \n    return ans;\n    }\n};\n\n// 1 2 3 4 5 6 \n// [6,8,3,7,8,9,4,8]","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-beauty-in-the-array","has_notes":false,"flag_type":1}