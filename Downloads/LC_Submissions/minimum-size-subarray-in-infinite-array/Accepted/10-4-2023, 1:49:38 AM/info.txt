{"id":1066232763,"lang":"cpp","lang_name":"C++","time":"1 month, 1 week","timestamp":1696364378,"status":10,"status_display":"Accepted","runtime":"199 ms","url":"/submissions/detail/1066232763/","is_pending":"Not Pending","title":"Minimum Size Subarray in Infinite Array","memory":"91.3 MB","code":"class Solution {\npublic:\n    int minSizeSubarray(vector<int>& A, int target) {\n        long sumA = accumulate(A.begin(), A.end(), 0L), su = 0;\n        int n = A.size(), k = target / sumA, res = n;\n        target %= sumA;\n        if (target == 0)\n            return k * n;\n        unordered_map<long, int> dp{{0L, -1}};\n        for (int i = 0; i < 2 * n; ++i) {\n            su += A[i % n];\n            if (dp.count(su - target))\n                res = min(res, i - dp[su - target]);\n            dp[su] = i;\n        }\n        return res < n ? res + k * n : -1;\n    }\n};","compare_resulttitle_slug":"minimum-size-subarray-in-infinite-array","has_notes":false,"flag_type":1}