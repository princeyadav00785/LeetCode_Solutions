{"id":927257547,"lang":"cpp","lang_name":"C++","time":"7 months, 2 weeks","timestamp":1680532731,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/927257547/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n     bool isEquivalent(TreeNode* left, TreeNode* right) {\n        if (!left || !right) return left == right;\n        else return left->val == right->val && isEquivalent(left->left, right->right) && isEquivalent(right->left, left->right);\n    }\n\n    bool isSymmetric(TreeNode* root) {\n        if(root==NULL){return true;}\n      return isEquivalent(root->right,root->left);\n    }\n    // bool isEquivalent(TreeNode*left,TreeNode*right){\n    //     if(left->val!=right->val){return  false;}\n    //     bool left= isEquivalent\n    // }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false,"flag_type":1}