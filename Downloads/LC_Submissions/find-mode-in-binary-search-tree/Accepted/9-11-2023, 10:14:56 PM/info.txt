{"id":1046688572,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1694450696,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/1046688572/","is_pending":"Not Pending","title":"Find Mode in Binary Search Tree","memory":"25.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void traverse(TreeNode* root,vector<int>&v){\n        if(root==NULL)return ;\n        v.push_back(root->val);\n        traverse(root->right,v);\n        traverse(root->left,v);\n    }\n    \n    vector<int> findMode(TreeNode* root) {\n        vector<int>v;\n        traverse(root,v);\n        map<int,int>mp;\n        int mxm=0;\n        for(int i=0;i<v.size();i++){\n            mp[v[i]]++;\n        }\n        for(auto x:mp){\n            if(x.second>mxm)mxm=x.second;\n        }\n        vector<int>ans;\n        for(auto x:mp){\n            if(x.second==mxm)ans.push_back(x.first);\n        }\n        return ans;\n    }\n};","compare_result":"11111111111111111111111","title_slug":"find-mode-in-binary-search-tree","has_notes":false,"flag_type":1}