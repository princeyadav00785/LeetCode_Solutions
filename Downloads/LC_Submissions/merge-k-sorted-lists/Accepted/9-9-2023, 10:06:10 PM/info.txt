{"id":1044867652,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1694277370,"status":10,"status_display":"Accepted","runtime":"202 ms","url":"/submissions/detail/1044867652/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"13.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n   // ListNode *mergeKLists(vector<ListNode *> &lists) {\n    // if(lists.empty()){\n    //     return nullptr;\n    // }\n    // while(lists.size() > 1){\n    //     lists.push_back(mergeTwoLists(lists[0], lists[1]));\n    //     lists.erase(lists.begin());\n    //     lists.erase(lists.begin());\n    // }\n    // return lists.front();\n// }\n// ListNode *mergeTwoLists(ListNode *l1, ListNode *l2) {\n//     if(l1 == nullptr){\n//         return l2;\n//     }\n//     if(l2 == nullptr){\n//         return l1;\n//     }\n//     if(l1->val <= l2->val){\n//         l1->next = mergeTwoLists(l1->next, l2);\n//         return l1;\n//     }\n//     else{\n//         l2->next = mergeTwoLists(l1, l2->next);\n//         return l2;\n//     }\n// }\n    \n       ListNode *mergeKLists(vector<ListNode *> &lists) {\n        if(lists.size()==0)return NULL;\n           if(lists.size()==1)return lists[0];\n           \n           while(lists.size()>1){\n              lists.push_back(fxn(lists[0],lists[1]));\n               lists.erase(lists.begin());\n               lists.erase(lists.begin());\n           }\n           return lists[0];\n       }\n    ListNode* fxn(ListNode* l1, ListNode* l2){\n                if(l2==NULL)return l1;\n                if(l1==NULL)return l2;\n                if(l1->val>=l2->val){\n                    l2->next=fxn(l1,l2->next);\n                    return l2;\n                }\n                else{\n                    l1->next= fxn(l1->next,l2);\n                    return l1;\n                }\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-k-sorted-lists","has_notes":false,"flag_type":1}