{"id":999448653,"lang":"cpp","lang_name":"C++","time":"3 months, 4 weeks","timestamp":1689867060,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/999448653/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"14.1 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeKLists(vector<ListNode*>& lists) {\n      vector<int>v;\n      for (ListNode* head : lists) {\n            while (head) {\n                v.push_back(head->val);\n                head = head->next;\n            }\n        }\n        sort(v.begin(),v.end());\n        ListNode* dummy = new ListNode(0);\n          ListNode* dummy2 = dummy;\n        for(int i=0;i<v.size();i++){\n            ListNode* temp= new ListNode(v[i]);\n            dummy->next=temp;\n            dummy=temp;\n        }\n        dummy->next=NULL;\n        return dummy2->next;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-k-sorted-lists","has_notes":false,"flag_type":1}