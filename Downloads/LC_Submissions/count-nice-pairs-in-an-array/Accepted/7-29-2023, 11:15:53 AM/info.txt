{"id":1006645694,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1690609553,"status":10,"status_display":"Accepted","runtime":"86 ms","url":"/submissions/detail/1006645694/","is_pending":"Not Pending","title":"Count Nice Pairs in an Array","memory":"57.2 MB","code":"class Solution {\npublic:\n    \n    \n   int countNicePairs(vector<int>& nums) {\n\tlong count = 0;\n\tunordered_map<int, long> mp;\n\tfor(auto& num : nums) mp[num - rev(num)]++;        // counting frequency of each n - rev(n)\n\tfor(auto& pair : mp)  // with each value, we can form n*(n-1)/2 pairs\n\t\tcount = (count + (pair.second * (pair.second - 1)) / 2) % 1000000007; \n\t/* Infact, the above can be done in a single pass as well which I didn't realise at the first try -\n\tfor(auto& num : nums) count = (count + mp[num - reverseNum(num)]++) % 1000000007;\n\t*/\n\treturn count;\n}\nint rev(int n){\n\tint revNum = 0;\n\twhile(n) revNum = revNum * 10 + (n % 10), n /= 10;\n\treturn revNum;\n}\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-nice-pairs-in-an-array","has_notes":false,"flag_type":1}