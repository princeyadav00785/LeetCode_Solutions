{"id":978939078,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1687661901,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/978939078/","is_pending":"Not Pending","title":"Ways to Split Array Into Good Subarrays","memory":"N/A","code":"class Solution {\npublic:\n    int numberOfGoodSubarraySplits(vector<int>& nums) {\n        map<int,int>mp;\n        map<int,int>mp2;\n        int n=nums.size();\n        vector<int>a(n,0);\n        vector<int>b(n,0);\n        for(int i=0;i<n;i++){\n            mp[nums[i]]++;\n            if(!mp[1]){a[i]=0;}else\n            a[i]=mp[1];\n        }\n        for(int i=n-1;i>-1;i--){\n            mp2[nums[i]]++;\n            if(!mp2[1]){b[i]=0;}else\n            b[i]=mp2[1];\n        }\n        for(int i=0;i<n;i++){\n            cout<<a[i]<<\" \";\n        }\n        if(mp[1]==1&&mp2[1]==1){return 1;}\n        else\n{        long long cnt=0,mod=1e+7;\n        for(int i=1;i<n;i++){\n            if(a[i-1]==1&&b[i]==1){cnt= (cnt+1)%mod;}\n        }\n        \n        return cnt;}\n    }\n};","compare_resulttitle_slug":"ways-to-split-array-into-good-subarrays","has_notes":false,"flag_type":1}