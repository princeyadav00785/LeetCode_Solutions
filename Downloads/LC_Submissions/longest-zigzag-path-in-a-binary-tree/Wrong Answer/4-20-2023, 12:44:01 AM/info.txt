{"id":936540053,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1681931641,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/936540053/","is_pending":"Not Pending","title":"Longest ZigZag Path in a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxlength=0;\nvoid fxn(TreeNode* root,int righ,int currlength){\n        if(root==NULL){return;}\n        maxlength=max(maxlength,currlength);\n       if(righ==1){\n           fxn(root->right,0,currlength+1);\n           fxn(root->left,1,1);\n       }else{\n            fxn(root->left,0,currlength+1);\n           fxn(root->right,1,1);\n       }\n          \n    }\n    \n//         int res = 0;\n\n//     void solve(TreeNode* node, bool goLeft, int currPathLen) {\n//         if (!node) return;\n//         res = max(res, currPathLen);\n//         if (goLeft) {\n//             solve(node->left, false, currPathLen + 1);\n//             solve(node->right, true, 1);\n//         } else {\n//             solve(node->right, true, currPathLen + 1);\n//             solve(node->left, false, 1);\n//         }\n//     }\n\n    int longestZigZag(TreeNode* root) {\n        \n      fxn(root,0,0);\n        fxn(root,1,0);\n        return maxlength;\n    }\n};","compare_result":"1011010001000110101100000010000001000000000000011000000000","title_slug":"longest-zigzag-path-in-a-binary-tree","has_notes":false,"flag_type":1}