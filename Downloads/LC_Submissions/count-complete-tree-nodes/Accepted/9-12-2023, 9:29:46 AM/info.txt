{"id":1047101015,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1694491186,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/1047101015/","is_pending":"Not Pending","title":"Count Complete Tree Nodes","memory":"31.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void fxn(TreeNode* root,  vector<int>&v){\n        if(root==NULL)return ;\n        v.push_back(root->val);\n        fxn(root->left,v);\n        fxn(root->right,v);\n    }\n    \n    int countNodes(TreeNode* root) {\n        vector<int>v;\n        fxn(root,v);\n        return v.size();\n    }\n};","compare_result":"111111111111111111","title_slug":"count-complete-tree-nodes","has_notes":false,"flag_type":1}