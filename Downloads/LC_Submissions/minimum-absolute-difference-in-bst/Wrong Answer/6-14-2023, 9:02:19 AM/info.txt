{"id":970778253,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1686713539,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/970778253/","is_pending":"Not Pending","title":"Minimum Absolute Difference in BST","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void traversal(int &mnm,TreeNode* root){\n        if(root==NULL){return ;}\n        int l=INT_MAX,r=INT_MAX,c=INT_MAX;\n        if(root->left) l = abs(root->val-root->left->val);\n        if(root->right) r=abs(root->val-root->right->val);\n        if(root->left&&root->right)c= abs(root->left->val-root->right->val);\n        mnm = min({l,r,mnm});\n        traversal(mnm,root->right);\n        traversal(mnm,root->left);\n    }\n    \n    int getMinimumDifference(TreeNode* root) {\n         int mnm=INT_MAX,node=INT_MAX;\n        traversal(mnm,root);\n        return mnm;\n    }\n};","compare_result":"111111111111111111010010101101111110001111101111110001100110001100101101101111011110111011011101011111111110101010011000101010101101111011111111111111111001100111010000001001110010111010111","title_slug":"minimum-absolute-difference-in-bst","has_notes":false,"flag_type":1}