{"id":1041804498,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1693974909,"status":10,"status_display":"Accepted","runtime":"367 ms","url":"/submissions/detail/1041804498/","is_pending":"Not Pending","title":"Maximum Twin Sum of a Linked List","memory":"126.8 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    int pairSum(ListNode* head) {\n       vector<int>v;\n        ListNode* temp=head;\n        while(temp){\n\n          if(temp!=NULL) { v.push_back(temp->val);}\n                        temp=temp->next;\n        }\n        int mxm=INT_MIN;\n        // cout<<v.size();\n        for(int i=0;i<v.size()/2;i++){\n         \n            int  a= v[i]+v[v.size()-1-i];\n               cout<<a<<\" \";\n            mxm=max(mxm,a);\n        }\n        return mxm;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111","title_slug":"maximum-twin-sum-of-a-linked-list","has_notes":false,"flag_type":1}