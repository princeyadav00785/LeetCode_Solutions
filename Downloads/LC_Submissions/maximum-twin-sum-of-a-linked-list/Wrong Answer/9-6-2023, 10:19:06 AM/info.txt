{"id":1041813263,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1693975746,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1041813263/","is_pending":"Not Pending","title":"Maximum Twin Sum of a Linked List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverse(ListNode* head){\n        ListNode* prev=NULL;\n        ListNode* curr = head;\n        while(curr){\n            ListNode* nxt = curr->next;\n            curr->next=prev;\n            prev=curr;\n            curr= nxt;\n            \n        }\n        return prev;\n    }\n    int pairSum(ListNode* head) {\n        ListNode* newhead= reverse(head);\n        int mxm=INT_MIN;\n        while(head){\n            int a= head->val+newhead->val;\n            mxm=max(a,mxm);\n            head=head->next;\n            newhead=newhead->next;\n        }\n        return mxm;\n    }\n};","compare_result":"1110000000100111110100000000000000000000000000","title_slug":"maximum-twin-sum-of-a-linked-list","has_notes":false,"flag_type":1}