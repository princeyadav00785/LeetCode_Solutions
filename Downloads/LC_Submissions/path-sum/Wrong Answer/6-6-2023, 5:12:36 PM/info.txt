{"id":965114800,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1686051756,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/965114800/","is_pending":"Not Pending","title":"Path Sum","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void fxn(TreeNode*root , vector<int>&sum,vector<int>& s){\n        if(root==NULL){\n          int a=0;\n            for(int i=0;i<s.size();i++){\n                a+=s[i];\n            }\n            sum.push_back(a);\n            return;\n        }\n        s.push_back(root->val);\n        fxn(root->left,sum,s);\n        fxn(root->right,sum,s);\n        s.pop_back();\n            \n        \n    }\n    \n    bool hasPathSum(TreeNode* root, int targetSum) {\n        if(root==NULL&&targetSum==0){return false;}\n         // if(root==NULL&&targetSum!=0){return true;}\n        \n      vector<int>sum;\n             vector<int> s;\n        fxn(root,sum,s);\n        for(int i=0;i<sum.size();i++){\n            if(sum[i]==targetSum){return true;}\n            cout<<sum[i]<<\" \";\n        }\n        \n        return false;\n    }\n};","compare_result":"111111110111011111111101011101011111111010111101111111101111111011111111101111111111111111111111111111111111111111111","title_slug":"path-sum","has_notes":false,"flag_type":1}