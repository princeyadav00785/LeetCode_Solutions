{"id":965117254,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1686052047,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/965117254/","is_pending":"Not Pending","title":"Path Sum","memory":"21.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void fxn(TreeNode*root , vector<int>&sum,vector<int>& s){\n        if(root==NULL){\n          int a=0;\n            for(int i=0;i<s.size();i++){\n                a+=s[i];\n            }\n            sum.push_back(a);\n            return;\n        }\n        s.push_back(root->val);\n        fxn(root->left,sum,s);\n        fxn(root->right,sum,s);\n        s.pop_back();\n            \n        \n    }\n    \n    bool hasPathSum(TreeNode* root, int sum) {\n//         if(root==NULL&&targetSum==0){return false;}\n        \n//       vector<int>sum;\n//              vector<int> s;\n//         fxn(root,sum,s);\n//         for(int i=0;i<sum.size();i++){\n//             if(sum[i]==targetSum){return true;}\n//             cout<<sum[i]<<\" \";\n//         }\n        \n//         return false;\n        if(root == NULL)  return false;\n    if(root->right == root->left)  return sum == root->val;\n    return hasPathSum(root->left, sum - root->val) || hasPathSum(root->right, sum - root->val) ;\n\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum","has_notes":false,"flag_type":1}