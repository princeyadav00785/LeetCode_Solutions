{"id":981317645,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1687925903,"status":10,"status_display":"Accepted","runtime":"475 ms","url":"/submissions/detail/981317645/","is_pending":"Not Pending","title":"Robot Collisions","memory":"189.1 MB","code":"class Solution {\npublic:\n    void performOperations(vector<int> &h,stack<int> &st,int i) {\n        while(!st.empty()) {\n            int top = st.top();\n            st.pop();\n            if(h[top] > h[i]) {\n                h[top] -= 1;\n                h[i] = 0;\n                st.push(top);\n                return ;\n            } else if(h[top] == h[i]) {\n                h[i] = 0, h[top] = 0;\n                return ;\n            }\n            else {\n                h[i] -= 1;\n                h[top] = 0;\n            }\n        }\n    }\n    vector<int> survivedRobotsHealths(vector<int>& v, vector<int>& h, string s) {\n        stack<int> st;\n        int n = v.size();\n        vector<int> idx(n);\n        for(int i = 0; i < n; i += 1) idx[i] = i;\n        sort(idx.begin(),idx.end(),[&](int i, int j) {\n           return v[i] < v[j]; \n        });\n        for(int j = 0; j < n; j += 1) {\n            int i = idx[j];\n            if(s[i] == 'L' && st.empty()) continue;\n            else if(s[i] == 'R') st.push(i);\n            else {\n                performOperations(h, st, i);\n            }\n        }\n        vector<int> ans;\n        for(int x : h) {\n            if(x) ans.push_back(x);\n        }\n        return ans;\n    }\n};","compare_resulttitle_slug":"robot-collisions","has_notes":false,"flag_type":1}