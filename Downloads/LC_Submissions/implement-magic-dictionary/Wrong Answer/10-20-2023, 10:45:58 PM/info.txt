{"id":1080060242,"lang":"cpp","lang_name":"C++","time":"3 weeks, 6 days","timestamp":1697822158,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1080060242/","is_pending":"Not Pending","title":"Implement Magic Dictionary","memory":"N/A","code":"class MagicDictionary {\npublic:\n     map<string,int>mp;\n    MagicDictionary() {\n       \n    }\n    \n    void buildDict(vector<string> d) {\n        for(int i=0;i<d.size();i++){\n            mp[d[i]]++;\n        }\n    }\n    \n    bool search(string W) {\n        int mnm=INT_MAX;\n        for(auto x:mp){\n           if(W.length()==x.first.length()){\n               int cnt=0;\n               for(int i=0;i<W.length();i++){\n                   if(W[i]!=x.first[i])cnt++;\n               }\n               mnm=min(mnm,cnt);\n           } \n                      }\n        if(mnm==1)return true;\n        return false;\n    }\n};\n\n/**\n * Your MagicDictionary object will be instantiated and called as such:\n * MagicDictionary* obj = new MagicDictionary();\n * obj->buildDict(dictionary);\n * bool param_2 = obj->search(searchWord);\n */","compare_result":"10000000000000000100000000000011111111111111111111111111111111111111111110111101111","title_slug":"implement-magic-dictionary","has_notes":false,"flag_type":1}