{"id":1042684705,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1694059353,"status":10,"status_display":"Accepted","runtime":"238 ms","url":"/submissions/detail/1042684705/","is_pending":"Not Pending","title":"Merge In Between Linked Lists","memory":"94.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeInBetween(ListNode* head, int a, int b, ListNode* list2) {\n        \n       ListNode* temp=head;\n          ListNode* temp2=head;\n                  ListNode* temp3=list2;\n     int i=1,j=1;\n        while(i<a){\n            temp=temp->next;\n            i++;\n        }\n         while(j<b){\n            temp2=temp2->next;\n             j++;\n        }\n        \n        temp2=temp2->next->next;\n           while(temp3->next)temp3=temp3->next;\n        temp->next=list2;\n        temp3->next=temp2;\n        \n        return head;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-in-between-linked-lists","has_notes":false,"flag_type":1}