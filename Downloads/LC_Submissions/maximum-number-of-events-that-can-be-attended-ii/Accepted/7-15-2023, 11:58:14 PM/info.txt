{"id":995276894,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1689445694,"status":10,"status_display":"Accepted","runtime":"381 ms","url":"/submissions/detail/995276894/","is_pending":"Not Pending","title":"Maximum Number of Events That Can Be Attended II","memory":"113.5 MB","code":"\nclass Solution {\npublic:\n    int help(vector<vector<int>>&e,int k,int i,vector<vector<int>>&dp){\n        if(i>=e.size())return 0;\n        if(dp[i][k]!=-1)return dp[i][k];\n        int ans = help(e,k,i+1,dp);\n        if(k){\n           vector<int> temp = {e[i][1],INT_MAX,INT_MAX};\n           int in = upper_bound(e.begin(), e.end(), temp)-e.begin();\n           ans = max(ans, e[i][2] + help(e,k-1,in,dp));\n        }\n        return dp[i][k] = ans;\n    }\n    int maxValue(vector<vector<int>>& e, int k) {\n        sort(e.begin(),e.end());\n        vector<vector<int>>dp(e.size(),vector<int>(k+1,-1));\n        return help(e,k,0,dp);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-number-of-events-that-can-be-attended-ii","has_notes":false,"flag_type":1}