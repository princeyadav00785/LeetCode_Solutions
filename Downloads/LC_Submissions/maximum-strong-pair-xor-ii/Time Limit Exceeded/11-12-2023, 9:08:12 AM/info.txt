{"id":1097001481,"lang":"cpp","lang_name":"C++","time":"4 days, 16 hours","timestamp":1699760292,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1097001481/","is_pending":"Not Pending","title":"Maximum Strong Pair XOR II","memory":"N/A","code":"#include <vector>\n#include <algorithm>\n\nclass Solution {\npublic:\n    int maximumStrongPairXor(std::vector<int>& nums) {\n        // Sorting the array in ascending order\n        std::sort(nums.begin(), nums.end());\n\n        int n = nums.size();\n        int result = 0;\n\n        // Iterating through the array to find strong pairs and calculate XOR\n        for (int i = 0; i < n; ++i) {\n            for (int j = i; j < n; ++j) {\n                // Checking the strong pair condition\n                if (nums[j] - nums[i] <= nums[i]) {\n                    result = std::max(result, nums[i] ^ nums[j]);\n                } else {\n                    // Break if the condition is not met to optimize the loop\n                    break;\n                }\n            }\n        }\n\n        return result;\n    }\n};\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"maximum-strong-pair-xor-ii","has_notes":false,"flag_type":1}