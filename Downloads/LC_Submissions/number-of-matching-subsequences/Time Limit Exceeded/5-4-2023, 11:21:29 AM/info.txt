{"id":944190420,"lang":"cpp","lang_name":"C++","time":"6 months, 2 weeks","timestamp":1683179489,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/944190420/","is_pending":"Not Pending","title":"Number of Matching Subsequences","memory":"N/A","code":"class Solution {\npublic:\n    int lcs (string s,string t, int n,int m){\n        vector<vector<int>>dp(n+1,vector<int> (m+1,0));\n        for(int i=1;i<=n;i++){\n            for(int j=1;j<=m;j++){\n                if(s[i-1]==t[j-1]){\n                    dp[i][j]=1+dp[i-1][j-1];\n                }else \n                    dp[i][j]= max(dp[i-1][j],dp[i][j-1]);\n            }\n        }\n        return dp[n][m];\n    }\n    int numMatchingSubseq(string s, vector<string>& words) {\n        int cnt=0;\n        for(int i=0;i<words.size();i++){\n            if(lcs(s,words[i],s.size(),words[i].size())==words[i].size()){cnt++;}\n        }\n        return cnt;\n    }\n};","compare_result":"11111111111111111111100000000000000000000000000000000","title_slug":"number-of-matching-subsequences","has_notes":false,"flag_type":1}