{"id":1086070092,"lang":"cpp","lang_name":"C++","time":"2 weeks, 5 days","timestamp":1698503702,"status":10,"status_display":"Accepted","runtime":"864 ms","url":"/submissions/detail/1086070092/","is_pending":"Not Pending","title":"Length of the Longest Subsequence That Sums to Target","memory":"41.7 MB","code":"class Solution {\npublic:\n    int lengthOfLongestSubsequence(vector<int>& nums, int target) {\n        int n = nums.size();\n    unordered_map<int, int> dp;  // dp[i] represents the length of the subsequence with sum i\n\n    dp[0] = 0;  // Initialize with an empty subsequence\n\n    for (int num : nums) {\n        for (int sum = target; sum >= num; sum--) {\n            if (dp.count(sum - num)) {\n                dp[sum] = max(dp[sum], dp[sum - num] + 1);\n            }\n        }\n    }\n\n    return dp.count(target) ? dp[target] : -1;\n    }\n};","compare_resulttitle_slug":"length-of-the-longest-subsequence-that-sums-to-target","has_notes":false,"flag_type":1}