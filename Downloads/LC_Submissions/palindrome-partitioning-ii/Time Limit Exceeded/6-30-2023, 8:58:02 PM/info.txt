{"id":983149057,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1688138882,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/983149057/","is_pending":"Not Pending","title":"Palindrome Partitioning II","memory":"N/A","code":"#include <string>\n#include <vector>\n#include <climits>\n\nclass Solution {\npublic:\n    int fxn(std::string s, int i, int j, std::vector<std::vector<int>>& dp) {\n        if (i >= j) {\n            return 0;\n        }\n        if (ispalindrome(s, i, j)) {\n            return 0;\n        }\n        if (dp[i][j] != -1) {\n            return dp[i][j];\n        }\n        int mnm = INT_MAX;\n        for (int k = i; k <= j - 1; k++) {\n            int left= dp[i][k];\n            if(left==-1)left =fxn(s, i, k, dp) ;\n            int right= dp[k+1][j];\n            if(right==-1)right= fxn(s, k + 1, j, dp);\n            int temp = left +right  + 1;\n            if (temp < mnm) {\n                mnm = temp;\n            }\n        }\n        return dp[i][j] = mnm;\n    }\n\n    bool ispalindrome(std::string s, int i, int j) {\n        while (i <= j) {\n            if (s[i] != s[j]) {\n                return false;\n            }\n            i++;\n            j--;\n        }\n        return true;\n    }\n\n    int minCut(std::string s) {\n        int i = 0, j = s.size() - 1;\n        int n = s.size();\n        std::vector<std::vector<int>> dp(n, std::vector<int>(n, -1));\n        return fxn(s, i, j, dp);\n    }\n};\n","compare_result":"1111111111111111111111111111000000000","title_slug":"palindrome-partitioning-ii","has_notes":false,"flag_type":1}